openapi: 3.0.3
info:
  version: 0.1.0
  title: Natural Language Understanding API
  description: "Vonage's Natural Language Understanding API allows you to build, store, and use model's for intent \nand entity detection from user utterances.\n"
  contact:
    name: Nexmo
    url: 'https://developer.nexmo.com/'
    email: devrel@nexmo.com
servers:
  - url: 'https://api.nexmo.com/v0.1/athena'
paths:  
  '/intents/{intent_id}/utterances':
    post:
      summary: Create an utterance
      operationId: createUtterance
      description: Create an utterance that corresponds to a given intent
      tags:
        - Utterances
      parameters:
        - $ref: "#/components/parameters/intent_id"
      requestBody:        
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/utterance"      
      responses:
        '201':
          description: Created utterance
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/utterance"
        '400':
          description: Bad Request
        '401':
          description: Invalid or Missing Credentials
        '404':
          description: Resource not found
  '/utterances':
    get:
      summary: List utterances
      tags:
        - Utterances
      operationId: listUtterances
      description: List the utterances for a given intent
      parameters:
        - $ref: '#/components/parameters/search_intent_id'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/utterances"
        '400':
          description: Bad Request
        '401':
          description: Missing or Invalid Credentials
  '/utterances/{utterance_id}':
    get:
      summary: Get Utterance
      operationId: getUtterance
      tags:
        - Utterances
      parameters:
        - $ref: '#/components/parameters/utterance_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/utterance_links"
        '401':
          description: Missing or Invalid Credentials
        '404':
          description: Resource Not Found
    patch:
      description: Updates the utterance - note all fields are replaced and not added
      tags:
        - Utterances
      summary: Update utterance
      operationId: updateUtterance
      parameters:
        - $ref: "#/components/parameters/utterance_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/utterance"      
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
        '401':
          description: Missing or Invalid Credentials
        '404':
          description: Resource Not Found
        '422':
          description: Unprocessable Entity
    delete:
      description: deletes the utterances
      tags:
        - Utterances
      summary: Delete Utterance
      operationId: deleteUtterance
      parameters:
        - $ref: "#/components/parameters/utterance_id"
      responses:
        '204':
          description: No Content
        '401':
          description: Missing or Invalid Credentials
        '404':
          description: Resource Not Found        
  /models:
    get:
      summary: List models
      operationId: list_models
      tags:
        - Models
      parameters:        
        - name: intent_id
          description: the intent to search on
          in: query
          example: INT-f972836a-550f-45fa-956c-12a2ab5b7d22
          schema:
            type: string
          required: false
        - name: entity_id
          description: the entity to search on
          in: query
          example: ENT-f972836a-550f-45fa-956c-12a2ab5b7d22
          schema:
            type: string
          required: false
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  page_size:
                    type: integer
                    example: 10
                    description: The number of results returned on this page.                  
                  _embedded:
                    type: object
                    x-nexmo-developer-collection-description-show: true
                    properties:
                      models:
                        type: array
                        description: List of Models matching the provided filter
                        items:
                          $ref: '#/components/schemas/model_links'
    post:
      summary: Create model
      operationId: create_model
      tags:
        - Models
      requestBody:
        $ref: '#/components/requestBodies/Model'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model'
    
  /intents:
    get:
      operationId: list_intents
      summary: List intents
      tags:
        - Intents
      parameters:        
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  page_size:
                    type: integer
                    example: 10
                    description: The number of results returned per page                  
                  _embedded:
                    type: object
                    x-nexmo-developer-collection-description-show: true
                    properties:
                      intents:
                        type: array
                        description: the list of intents matching the provided filter
                        items:
                          $ref: '#/components/schemas/intent_links'
        '401':
          description: Not Authorized
    post:
      summary: Create Intent
      operationId: create_intent
      tags:
        - Intents
      requestBody:
        $ref: '#/components/requestBodies/Intent'
      responses:
        '200':
          description: Intent Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intent'
        '401':
          description: Not Authorized    
  '/intents/{intent_id}':
    get:
      operationId: get_intent
      description: Get an intent
      tags:
        - Intents
      parameters:
        - $ref: '#/components/parameters/intent_id'
      responses:
        '200':
          description: Intent Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intent_links'
        '401':
          description: Not Authorized
        '404':
          description: Not Found
    patch:
      operationId: update_intent
      summary: Update intent
      description: Add utterances to or rename to an intent.
      tags:
        - Intents
      parameters:
        - $ref: '#/components/parameters/intent_id'
      requestBody:
        $ref: '#/components/requestBodies/IntentUpdate'
      responses:
        '200':
          description: Intent updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intent'
        '401':
          description: Not Authorized
        '404':
          description: Not Found
    delete:
      operationId: delete_intent
      description: Delete an intent
      tags:
        - Intents
      parameters:
        - $ref: '#/components/parameters/intent_id'
        - $ref: "#/components/parameters/force"
      responses:
        '204':
          description: No Content
        '401':
          description: Not Authorized
        '404':
          description: Not Found        
        '409':
          description: Delete operation would orphan utterances, delete utterances or set force to true to continue with the delete operation
  '/entities/{entity_id}':
    get:
      summary: Get an Entity
      operationId: get_entity
      tags:
        - Entities
      parameters:
        - $ref: '#/components/parameters/entity_id'
      responses:
        '200':
          description: Value Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entity_links'
        '401':
          description: Bad Credentials
        '404':
          description: Resource Not Found
    patch:
      summary: Update an entity
      operationId: update_entity
      tags:
        - Entities
      parameters:
        - $ref: '#/components/parameters/entity_id'
      requestBody:
        $ref: '#/components/requestBodies/EntityUpdate'
      responses:
        '200':
          description: Entity Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/value'
        '401':
          description: Unauthorized
        '404':
          description: Not Found    
    delete:
      summary: Delete an entity
      operationId: delete_entity
      tags:
        - Entities
      parameters:
        - $ref: '#/components/parameters/entity_id'
        - $ref: "#/components/parameters/force"
      responses:
        '204':
          description: No Content
        '401':
          description: Not Authorized
        '404':
          description: Not Found
        '409':
          description: Delete operation would orphan child values. Set the force flag to true or delete the child values to delete
  /entities:
    get:
      operationId: list_entities
      tags:
        - Entities
      summary: List entities
      description: List all Entities associated with your application. The endpoint requires a JWT.
      parameters:              
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  page_size:
                    type: integer
                    example: 10
                    description: The number of results returned on this page.                  
                  _embedded:
                    type: object
                    x-nexmo-developer-collection-description-show: true
                    properties:
                      entities:
                        type: array
                        description: List of entities matching the provided filter
                        items:
                          $ref: '#/components/schemas/entity_links'
        '401':
          description: Not Authorized
    post:
      operationId: create_entity
      tags:
        - Entities
      summary: Create an entity
      description: 'Creates an entity. An entity represents a real world object such as a color, person, location'
      requestBody:
        $ref: '#/components/requestBodies/Entity'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entity'
        '401':
          description: Not Authorized    
  '/synonyms':
    get:
      operationId: get_synonyms
      tags:
        - Synonyms
      summary: List synonyms
      parameters:        
        - $ref: '#/components/parameters/search_value_id'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/order'                
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  page_size:
                    type: integer
                    example: 10
                    description: The number of results returned on this page.                  
                  _embedded:
                    type: object
                    x-nexmo-developer-collection-description-shown: true
                    properties:
                      synonyms:
                        type: array
                        description: List of Synonyms matching provided filter
                        items:
                          $ref: '#/components/schemas/synonym_links'
        '401':
          description: Not Authorized
        '404':
          description: Resource Not Found
  '/values/{value_id}/synonyms':
    post:
      operationId: create_synonym
      tags:
        - Synonyms
      summary: Add a synonym
      parameters:        
        - $ref: '#/components/parameters/value_id'
      requestBody:
        $ref: '#/components/requestBodies/Synonym'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/synonym'
        '401':
          description: Not Authorized
        '404':
          description: Not Found    
  '/synonyms/{synonym_id}':
    parameters:
      - $ref: '#/components/parameters/synonym_id'   
    get:
      summary: Get a synonym
      operationId: get_synonym
      tags:
        - Synonyms
      responses:
        '200':
          description: Synonym retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/synonym_links'
        '401':
          description: Not Authorized
        '404':
          description: Synonym Not found
    delete:
      summary: Delete a synonym
      operationId: delete_synonym
      tags:
        - Synonyms
      responses:
        '204':
          description: No Content
        '401':
          description: Not Authorized
        '404':
          description: Synonym Not Found
  '/values':
    summary: list_values
    get:
      operationId: get_values
      tags:
        - Values
      summary: List Values
      parameters:
        - $ref: '#/components/parameters/search_entity_id'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/order'        
      responses:
        '200':
          description: Values Listed
          content:
            application/json:
              schema:
                properties:                  
                  _embedded:
                    type: object
                    x-nexmo-developer-collection-description-shown: true
                    properties:
                      values:
                        type: array
                        description: List of Values matching provided filter
                        items:
                          $ref: '#/components/schemas/value_links'
        '401':
          description: Not Authorized
        '404':
          description: Not Found
  '/entities/{entity_id}/values':
    post:
      operationId: create_value
      tags:
        - Values
      summary: Create a value      
      parameters:
        - $ref: "#/components/parameters/entity_id"
      requestBody:
        $ref: '#/components/requestBodies/Value'
      responses:
        '200':
          description: Value Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/value'
        '401':
          description: Not Authorized
        '404':
          description: Not Found
  '/values/{value_id}':
    get:
      operationId: get_value
      tags:
        - Values
      summary: Get a value
      parameters:
        - $ref: '#/components/parameters/value_id'        
      responses:
        '200':
          description: Value found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/value_links'
        '401':
          description: Not Authorized
        '404':
          description: Resource Not Found
    patch:
      operationId: update_value
      tags:
        - Values
      summary: Update a value
      requestBody:
        $ref: '#/components/requestBodies/ValueUpdate'
      responses:
        '202':
          description: Accepted          
        '401':
          description: Not Authorized
        '404':
          description: Resource Not Found
    delete:
      operationId: delete_value
      tags:
        - Values
      summary: Delete a value
      parameters:
        - $ref: '#/components/parameters/value_id'
        - $ref: "#/components/parameters/force"
      responses:
        '204':
          description: No Content
        '401':
          description: Not Authorized
        '404':
          description: Resource Not Found
        '409':
          description: Conflict - Delete would orphan child entities, delete the child entities or set the force flag to true to cascade the delete operation.
  '/models/{model_id}':
    parameters:
      - schema:
          type: string
        name: model_id
        description: The unique id for the model
        example: MOD-92a44c64-7e4e-485f-a0c4-1f2adfc44625
        in: path
        required: true
    get:
      summary: Get a model
      tags:
        - Models
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model_links'
      operationId: get-models-model_id
      description: Get the model at the given ID
    patch:
      summary: Update a model
      operationId: patch-models-model_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model'
      description: Update a Model at the given Id
      requestBody:
        $ref: '#/components/requestBodies/Model'
      tags:
        - Models
    delete:
      summary: Delete a model
      operationId: delete-models-model_id
      responses:
        '204':
          description: No Content
      description: Deletes a Model
      tags:
        - Models
  /analyze:
    post:
      summary: Analyze text
      operationId: analyze_text
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analysis'
        '401':
          description: Unauthorized
        '422':
          description: validation error
      description: Analyze submitted text text
      requestBody:
        $ref: '#/components/requestBodies/AnalyzeRequest'
      tags:
        - Analyze
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    force:
      name: force
      in: query
      description: If set to `true` a delete will cascade to the resources children.
      required: false
      example: false
      schema:
        type: boolean
    search_entity_id:
      name: entity_id
      in: query
      required: true
      description: The entity to search on
      schema:
        type: string
    analyze_id:
      name: analyze_id
      in: path
      description: Unique id for the analysis being looked up
      required: true
      schema:
        type: string
    model_id:
      name: model_id
      in: path
      description: Unique id for a model being looked up
      required: true
      schema:
        type: string
    intent_id:
      name: intent_id
      in: path
      description: Unique Id for an Intent
      required: true
      schema:
        type: string
    utterance_id:
      name: utterance_id
      in: path
      description: Unique Id for an utterance
      example: UTT-f972836a-550f-45fa-956c-12a2ab5b7d22
      required: true
      schema:
        type: string
    entity_id:
      name: entity_id
      in: path
      description: Unique Id for an entity
      required: true
      schema:
        type: string    
    page_size:
      name: page_size
      in: query
      description: The number of results returned per page.   The default value is `10`. The maximum value is `100`.
      schema:
        type: integer
        default: 10
        example: 10
        minimum: 1
        maximum: 100
      required: false
    order:
      name: order
      in: query
      description: Show the most (`desc`) / least (`asc`) recently created entries first
      schema:
        type: string
        default: asc
        enum:
          - asc
          - desc
      required: false
    cursor:
      name: cursor
      in: query
      description: |
        The cursor to start returning results from.

        You are not expected to provide this manually, but to follow the url provided in `_links.next.href` in the response which contains a `cursor` value
      schema:
        type: string
      required: false
    synonym_id:
      name: synonym_id
      in: path
      description: The Id of the synonym
      example: SYN-f972836a-550f-45fa-956c-12a2ab5b7d22
      schema:
        type: string
      required: true
    search_intent_id:
      name: intent_id
      description: the intent to search on
      in: query
      example: INT-f972836a-550f-45fa-956c-12a2ab5b7d22
      schema:
        type: string
      required: true
    search_value_id:
      name: value_id
      in: query
      description: the value to search on
      example: VAL-f972836a-550f-45fa-956c-12a2ab5b7d22
      schema:
        type: string
      required: true
    value_id:
      name: value_id
      in: path
      description: The Id of the value
      example: VAL-f972836a-550f-45fa-956c-12a2ab5b7d22
      schema:
        type: string
      required: true
  requestBodies:
    AnalyzeRequest:
      description: A Request to analyze a piece of text against a model
      content:
        application/json:
          schema:
            type: object
            required:
              - text
            properties:
              text:
                $ref: '#/components/schemas/analyze_text'
              language_code:
                $ref: '#/components/schemas/language_code'
              model_id:
                $ref: '#/components/schemas/model_id'
              intent_ids:
                $ref: '#/components/schemas/intent_ids'
              entity_ids:
                $ref: '#/components/schemas/entity_ids'
    Model:
      description: The model to run text analysis against.
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                $ref: '#/components/schemas/model_name'
              intent_ids:
                $ref: '#/components/schemas/model_intent_ids'
              entity_ids:
                $ref: '#/components/schemas/entity_ids'
    IntentUpdate:
      description: New name for the intent
      x-nexmo-developer-collection-description-show: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                $ref: '#/components/schemas/intent_name'
              utterances:
                $ref: '#/components/schemas/utterances'
    Intent:
      description: A task or action a user intends for the agent
      x-nexmo-developer-collection-description-show: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
            properties:
              name:
                $ref: '#/components/schemas/intent_name'              
    Value:
      description: A possible value for an Entity
      content:
        application/json:
          schema:
            type: object
            required:
              - name
            properties:
              name:
                $ref: '#/components/schemas/value_name'
              synonyms:
                $ref: '#/components/schemas/synonyms'
              metadata:
                $ref: '#/components/schemas/metadata'
    Entity:
      description: An entity representing a real world object
      content:
        application/json:
          schema:
            type: object
            required:
              - name
            properties:
              name:
                $ref: '#/components/schemas/entity_name'
              values:
                $ref: '#/components/schemas/values'
    ValueUpdate:
      description: A possible value for an Entity
      content:
        application/json:
          schema:
            type: object
            required:
              - name
            properties:
              name:
                $ref: '#/components/schemas/value_name'
              metadata:
                $ref: '#/components/schemas/metadata'
    EntityUpdate:
      description: Update model of an entity.
      content:
        application/json:
          schema:
            type: object
            required:
              - name
            properties:
              name:
                $ref: '#/components/schemas/entity_name'
    Utterance:
      description: An utterance labeled for a specific intent
      x-nexmo-developer-collection-description-show: true
      content:
        application/json:
          schema:
            type: object
            required:
              - intent
              - text
            properties:
              intent_id:
                $ref: '#/components/schemas/intent_id'
              intent:
                $ref: '#/components/schemas/intent_name'
              text:
                $ref: '#/components/schemas/utterance_text'
              labeled_entities:
                $ref: '#/components/schemas/labeled_entities'
    LabeledEntity:
      description: An entity tagged within an utterance of an intent
      content:
        application/json:
          schema:
            type: object
            required:
              - type
              - name
              - text
              - start_idx
              - end_idx
            properties:
              type:
                $ref: '#/components/schemas/entity_name'
              name:
                $ref: '#/components/schemas/synonym_name'
              text:
                $ref: '#/components/schemas/labeled_text'
              start_idx:
                $ref: '#/components/schemas/start_idx'
              end_idx:
                $ref: '#/components/schemas/end_idx'
    Synonym:
      description: A Synonym of a Entity Value
      content:
        application/json:
          schema:
            type: object
            required:
              - synonym
            properties:
              synonym:
                type: string
                description: the synonym for a given concrete value of an entity
                example: mint
  schemas:
    value_id:
      type: string
      description: Unique id of a value
      example: VAL-92a44c64-7e4e-485f-a0c4-1f2adfc44625
    entity_id:
      type: string
      description: Unique id of an entity
      example: ENT-92a44c64-7e4e-485f-a0c4-1f2adfc44625
    value_request:
      type: object
      description: A possible value of an entity
      properties:
        name:
          $ref: '#/components/schemas/value_name'
        synonyms:
          $ref: '#/components/schemas/synonyms'
        metadata:
          $ref: '#/components/schemas/metadata'
    start_idx:
      type: integer
      description: position in the utterance where the entity starts
      example: 5
    end_idx:
      type: integer
      description: position in the utterance where the entity ends
      example: 10
    labeled_text:
      type: string
      description: the text denoting the entity
      example: red dress
    synonym_name:
      type: string
      description: the detectable synonym of the entity type in this utterance
      example: lime
    intent_id:
      type: string
      description: the id of an intent
      example: INT-92a44c64-7e4e-485f-a0c4-1f2adfc44625
    labeled_entities:
      x-nexmo-developer-collection-description-show: true
      type: array
      example:
        - type: color
          name: red
          text: red dress
          start_idx: 18
          end_idx: 27
      items:
        $ref: '#/components/schemas/labeled_entity'
    utterance_text:
      type: string
      description: The Text of the utterance
      example: "I'd like to buy a red dress"
    values:
      x-nexmo-developer-collection-description-shown: true
      type: array
      description: concrete representations of the entity in the real world
      items:
        $ref: '#/components/schemas/value_request'
    entity_name:
      type: string
      example: color
      description: the name of the entity - an abstract real world object
    metadata:
      type: object
      x-nexmo-developer-collection-description-shown: true
      description: metadata for the value you might want your app to use Limit 4k in size
      example: "{RGB:'00FF00'}"
    synonyms:
      type: array
      x-nexmo-developer-collection-description-shown: true
      description: synonyms associated with this value
      example:
        - mint
        - lime
      items:
        type: string
        example: mint
    value_name:
      type: string
      description: The name of the value - a concrete instance of the entity
      example: green
    intent_name:
      type: string
      description: The name of the intent
      example: Buy Dress
    utterances:
      type: array
      x-nexmo-developer-collection-description-shown: true
      description: pre-tagged utterances for the intent provided
      items:
        oneOf:
          - $ref: '#/components/schemas/utterance_links'      
    model_name:
      type: string
      description: The name of the model
      example: Airline Model
    analyze_text:
      type: string
      description: the text to run the natural language analysis against
      example: "I'd like to buy a red dress"
    language_code:
      description: BCP-47 compliant language code of the language the submitted text is in - current supported languages are - `en-US`
      type: string
      example: en-US
    model_id:
      type: string
      example: MOD-92a44c64-7e4e-485f-a0c4-1f2adfc44625
      description: "The Model to be used in analysis \n> Note every analyze requests requires at least a model or an intent\n"
    intent_ids:
      description: "the list of intents to be used in analysis \n> Note every analyze requests requires at least a model or an intent\n"
      type: array
      x-nexmo-developer-collection-description-shown: true
      items:
        type: string
      example:
        - INT-92a44c64-7e4e-485f-a0c4-1f2adfc44625
    model_intent_ids:
      description: "the list of intents to be used in the model"
      type: array
      x-nexmo-developer-collection-description-shown: true
      items:
        type: string
      example:
        - INT-92a44c64-7e4e-485f-a0c4-1f2adfc44625
    entity_ids:
      description: The entities to use in analysis
      type: array
      x-nexmo-developer-collection-description-shown: true
      items:
        type: string
      example:
        - ENT-92a44c64-7e4e-485f-a0c4-1f2adfc44625
    analysis:
      type: object
      description: The Result of an analysis request
      properties:
        analyze_id:
          type: string
          example: ANY-92a44c64-7e4e-485f-a0c4-1f2adfc44625
          description: The ID of an analysis request
        text:
          type: string
          example: "I'd like to buy a red dress"
          description: the text that was analyzed
        labeled_entities:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/labeled_entity'
              - type: object
                properties:
                  confidence:
                    type: number
                    description: confidence of the model the the labeled entity is in fact in the phrase
    model:
      type: object
      description: A model to run text analysis against
      properties:
        model_id:
          type: string
          description: the id of the model
          example: MOD-92a44c64-7e4e-485f-a0c4-1f2adfc44625
        name:
          type: string
          description: the name of the model
          example: Airline Model
        entity_ids:
          type: array
          x-nexmo-developer-collection-description-show: true
          description: the entities included in the model
          items:
            type: string
          example:
            - ENT-92a44c64-7e4e-485f-a0c4-1f2adfc44625
            - ENT-92a44c64-7e4e-485f-a0c4-1f2adfc44626
        intent_ids:
          type: array
          x-nexmo-developer-collection-description-show: true
          description: The intents included in the model
          items:
            type: string
          example:
            - INT-92a44c64-7e4e-485f-a0c4-1f2adfc44625
            - INT-92a44c64-7e4e-485f-a0c4-1f2adfc44626
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.nexmo.com/v0.1/athena/models/MOD-f972836a-550f-45fa-956c-12a2ab5b7d22
                
    model_links:
      allOf:
        - $ref: "#/components/schemas/model"
        - type: object
          properties:
            _links:
                type: object
                properties:
                  first:
                    type: object
                    properties:
                      href:
                        type: string
                        example: 'https://api.nexmo.com/v0.1/athena/models?int_id=INT-f972836a-550f-45fa-956c-12a2ab5b7d22&order=desc&page_size=10'                  
                  next:
                    type: object
                    properties:
                      href:
                        type: string
                        example: 'https://api.nexmo.com/v0.1/athena/models?int_id=INT-f972836a-550f-45fa-956c-12a2ab5b7d22&order=desc&page_size=10&cursor=88b395c167da4d94e929705cbd63b829a650e69a39197bfd4c949f4243f60dc4babb696afa404d2f44e7775e32b967f2a1a0bb8fb259c0999ba5a4e501eaab55'
                  prev:
                    type: object
                    properties:
                      href:
                        type: string
                        example: 'https://api.nexmo.com/v0.1/athena/models?int_id=INT-f972836a-550f-45fa-956c-12a2ab5b7d22&order=desc&page_size=10&cursor=069626a3de11d2ec900dff5042197bd75f1ce41dafc3f2b2481eb9151086e59aae9dba3e3a8858dc355232d499c310fbfbec43923ff657c0de8d49ffed9f7edb'
            
    labeled_entity:
      type: object
      description: An entity labeled for an utterance
      properties:
        entity_id:
          type: string
          description: the entity id of the labeled entity          
          example: ENT-92a44c64-7e4e-485f-a0c4-1f2adfc44625
        entity_name:
          type: string
          description: the name of the entity type being labeled
          example: fruit
        value_name:
          type: string
          description: The value of the entity being labeled
          example: orange
        value_id:
          type: string
          description: The unique id of the labeled value
          example: VAL-92a44c64-7e4e-485f-a0c4-1f2adfc44625
        synonym_id:
          type: string
          description: the synonym for the entity value that's been locked onto
          example: SYN-afe887d8-d587-4280-9aae-dfa4c9227d5e
        synonym_name:
          type: string
          description: the detectable synonym of the entity type in this utterance
          example: tangerine
        text:
          type: string
          description: the text denoting the entity
          example: Can I buy a tangerine?
        start_idx:
          type: integer
          description: position in the utterance where the entity starts
        end_idx:
          type: integer
          description: position in the utterance where the entity ends
    utterance:
      type: object
      description: "labeled text conveying user's intent"
      properties:
        id:
          description: The unique id of the utterance
          example: UTT-f972836a-550f-45fa-956c-12a2ab5b7d22
          type: string
        text:
          type: string
          description: the text of the utterance
        labeled_entities:
          type: array
          description: the entities associated with this utterance
          x-nexmo-developer-collection-description-shown: true
          items:
            oneOf:
              - $ref: '#/components/schemas/labeled_entity'
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.nexmo.com/v0.1/athena/utterances/UTT-f972836a-550f-45fa-956c-12a2ab5b7d22
    utterance_links:
      allOf:
        - $ref: "#/components/schemas/utterance"
        - type: object
          properties:            
            _links:
                type: object
                properties:
                  first:
                    type: object
                    properties:
                      href:
                        type: string
                        example: 'https://api.nexmo.com/v0.1/athena/utterances?int_id=INT-f972836a-550f-45fa-956c-12a2ab5b7d22&order=desc&page_size=10'                  
                  next:
                    type: object
                    properties:
                      href:
                        type: string
                        example: 'https://api.nexmo.com/v0.1/athena/utterances?int_id=INT-f972836a-550f-45fa-956c-12a2ab5b7d22&order=desc&page_size=10&cursor=88b395c167da4d94e929705cbd63b829a650e69a39197bfd4c949f4243f60dc4babb696afa404d2f44e7775e32b967f2a1a0bb8fb259c0999ba5a4e501eaab55'
                  prev:
                    type: object
                    properties:
                      href:
                        type: string
                        example: 'https://api.nexmo.com/v0.1/athena/utterances?int_id=INT-f972836a-550f-45fa-956c-12a2ab5b7d22&order=desc&page_size=10&cursor=069626a3de11d2ec900dff5042197bd75f1ce41dafc3f2b2481eb9151086e59aae9dba3e3a8858dc355232d499c310fbfbec43923ff657c0de8d49ffed9f7edb'
    intent:
      type: object
      description: "represents a real world task that a user want's to perform e.g. booking a flight"
      properties:
        name:
          type: string
          example: Buy Dress
          description: The name of the intent        
        id:
          type: string
          description: the identity of the intent
          example: INT-f972836a-550f-45fa-956c-12a2ab5b7d22
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.nexmo.com/v0.1/athena/intents/INT-f972836a-550f-45fa-956c-12a2ab5b7d22
    intent_links:
      allOf:
        - $ref: "#/components/schemas/intent"
        - type: object
          properties:
            _links:
              type: object
              properties:
                first:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.nexmo.com/v0.1/athena/intents?order=desc&page_size=10'                
                next:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.nexmo.com/v0.1/athena/intents?order=desc&page_size=10&cursor=88b395c167da4d94e929705cbd63b829a650e69a39197bfd4c949f4243f60dc4babb696afa404d2f44e7775e32b967f2a1a0bb8fb259c0999ba5a4e501eaab55'
                prev:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.nexmo.com/v0.1/athena/intents?order=desc&page_size=10&cursor=069626a3de11d2ec900dff5042197bd75f1ce41dafc3f2b2481eb9151086e59aae9dba3e3a8858dc355232d499c310fbfbec43923ff657c0de8d49ffed9f7edb'            
    value:
      properties:        
        name:
          type: string
          description: the name of a value representing a concrete instance of an entity. e.g. `green` is a possible value of the entity `color`
          example: green
        entity_id:
          $ref: "#/components/schemas/entity_id"
        id:
          type: string
          description: Unique identifier of a concrete value of an entity
          example: VAL-afe887d8-d587-4280-9aae-dfa4c9227d5e
        metadata:
          type: object
          description: Custom object of metadata that will be sent back to your app when this value is detected
          example: '{custom:metadata}'
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.nexmo.com/v0.1/athena/values/VAL-f972836a-550f-45fa-956c-12a2ab5b7d22
    value_links:
      allOf:
        - $ref: "#/components/schemas/value"
        - type: object          
          properties:
            _links:
              type: object
              properties:
                first:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.nexmo.com/v0.1/athena/values?entity_id=ENT-92a44c64-7e4e-485f-a0c4-1f2adfc44625&order=desc&page_size=10'                
                next:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.nexmo.com/v0.1/athena/values?entity_id=ENT-92a44c64-7e4e-485f-a0c4-1f2adfc44625&order=desc&page_size=10&cursor=88b395c167da4d94e929705cbd63b829a650e69a39197bfd4c949f4243f60dc4babb696afa404d2f44e7775e32b967f2a1a0bb8fb259c0999ba5a4e501eaab55'
                prev:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.nexmo.com/v0.1/athena/values?entity_id=ENT-92a44c64-7e4e-485f-a0c4-1f2adfc44625&order=desc&page_size=10&cursor=069626a3de11d2ec900dff5042197bd75f1ce41dafc3f2b2481eb9151086e59aae9dba3e3a8858dc355232d499c310fbfbec43923ff657c0de8d49ffed9f7edb'
    synonym:
      properties:        
        id:
          type: string
          description: the unique ID for a synonym
          example: SYN-afe887d8-d587-4280-9aae-dfa4c9227d5e
        value_id:
          $ref: "#/components/schemas/value_id"
        entity_id:
          $ref: "#/components/schemas/entity_id"
        synonym:
          type: string
          description: the synonym of a concrete value of an entity
          example: mint
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.nexmo.com/v0.1/athena/synonyms/SYN-f972836a-550f-45fa-956c-12a2ab5b7d22
    synonym_links:
      allOf:
          - $ref: "#/components/schemas/synonym"
          - type: object
            properties:
              _links:
                type: object
                properties:
                  first:
                    type: object
                    properties:
                      href:
                        type: string
                        example: 'https://api.nexmo.com/v0.1/athena/synonyms?value_id=VAL-92a44c64-7e4e-485f-a0c4-1f2adfc44625&order=desc&page_size=10'                  
                  next:
                    type: object
                    properties:
                      href:
                        type: string
                        example: 'https://api.nexmo.com/v0.1/athena/synonyms?value_id=VAL-92a44c64-7e4e-485f-a0c4-1f2adfc44625&order=desc&page_size=10&cursor=88b395c167da4d94e929705cbd63b829a650e69a39197bfd4c949f4243f60dc4babb696afa404d2f44e7775e32b967f2a1a0bb8fb259c0999ba5a4e501eaab55'
                  prev:
                    type: object
                    properties:
                      href:
                        type: string
                        example: 'https://api.nexmo.com/v0.1/athena/synonyms?value_id=VAL-92a44c64-7e4e-485f-a0c4-1f2adfc44625&order=desc&page_size=10&cursor=069626a3de11d2ec900dff5042197bd75f1ce41dafc3f2b2481eb9151086e59aae9dba3e3a8858dc355232d499c310fbfbec43923ff657c0de8d49ffed9f7edb'
        

    entity:
      type: object
      properties:
        name:
          type: string
          example: fruit
          description: the name of the entity
        id:
          type: string
          example: ENT-92a44c64-7e4e-485f-a0c4-1f2adfc44625
          description: The unique identifier for the entity     
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.nexmo.com/v0.1/athena/entities/ENT-f972836a-550f-45fa-956c-12a2ab5b7d22  
        
    entity_links:
      allOf:
        - $ref: "#/components/schemas/entity"
        - type: object
          properties:
            _links:
              type: object
              properties:
                first:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.nexmo.com/v0.1/athena/entities?order=desc&page_size=10'                
                next:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.nexmo.com/v0.1/athena/entities?order=desc&page_size=10&cursor=88b395c167da4d94e929705cbd63b829a650e69a39197bfd4c949f4243f60dc4babb696afa404d2f44e7775e32b967f2a1a0bb8fb259c0999ba5a4e501eaab55'
                prev:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.nexmo.com/v0.1/athena/entities?order=desc&page_size=10&cursor=069626a3de11d2ec900dff5042197bd75f1ce41dafc3f2b2481eb9151086e59aae9dba3e3a8858dc355232d499c310fbfbec43923ff657c0de8d49ffed9f7edb'
security:
  - bearerAuth: []
tags:
  - name: Analyze
    description: Used to Analyze text for Intents an entities
  - name: Models
    description: Models are used to compose different Intents and Entities from a knowledge base into a model that will be used to perform intent and entity detection on text inputs
  - name: Intents
    description: An intent of an utterance
  - name: Utterances
    description: Real speech phrases corresponding to a given user intent.
  - name: Entities
    description: 'An entity representing a real world object e.g. Color, Location, persons, organizations'
  - name: Values
    description: "A Value is a potential value of an entity - for example 'green' is a possible value of the entity 'color'"
  - name: Synonyms
    description: "A synonym is an alternative value for a discrete value of an entity - for example 'lime' or 'mint' can be thought of as a synonym for the 'green' value of the 'color' entity"
