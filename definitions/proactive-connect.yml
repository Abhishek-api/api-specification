openapi: 3.0.3
info:
  title: Vonage Proactive Connect API
  description: REST APIs to provide customers with a flexible and scalable way of sending large scale outreach campaigns using any channels available through the Vonage APIs
  version: 0.1.0
  contact:
    name: Vonage DevRel
    email: devrel@vonage.com
    url: https://developer.vonage.com/
    x-twitter: Vonage
  termsOfService: https://www.vonage.com/legal/communications-apis/terms-of-use/?icid=nexmo_rd
  license:
    name: The MIT License (MIT)
    url: https://opensource.org/licenses/MIT
  x-label: Beta
tags:
  - name: lists
    description: API to upload and manage a list of contacts
  - name: items
    description: API to manage individual elements of a list
  - name: actions
    description: API to create communication or list management actions such as sending an SMS or creating a new list based on a set of responses
  - name: jobs
    description: API to create a campaign ("Job") utilising a list, a set of actions and events
  - name: runs
    description: APIs relating to working with runs
  - name: events
    description: APIs relating to events - eg change to user subscribe status, a new list being created based on a response, invoke a chat bot agent or trigger certain analytics.
  - name: webhooks
    description: APIs relating to working with webhooks, used to notify your application of events
servers:
  - url: https://api-eu.vonage.com/v0.1/bulk
    description: prod env in EU geo
security:
  - bearerAuth: [ ]
paths:
  /lists:
    get:
      operationId: listsFindAll
      summary: Find all lists
      parameters:
        - $ref: "common/hal_structures.yml#/components/parameters/Page"
        - $ref: "common/hal_structures.yml#/components/parameters/PageSize"
      responses:
        "200":
          $ref: "#/components/responses/ListsPagedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
      tags:
        - lists
    post:
      operationId: listsCreate
      summary: Create list
      parameters: [ ]
      tags:
        - lists
      requestBody:
        $ref: "#/components/requestBodies/ListRequest"
      responses:
        "201":
          $ref: "#/components/responses/ListResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "409":
          $ref: "#/components/responses/ErrorConflict"
        "422":
          $ref: "#/components/responses/ErrorResourceLimitReached"
  /lists/{list_id}:
    parameters:
      - $ref: "#/components/parameters/ListId"
    get:
      operationId: listsGet
      summary: Get list by id
      responses:
        "200":
          $ref: "#/components/responses/ListResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - lists
    put:
      operationId: listsUpdate
      summary: Update list
      requestBody:
        $ref: "#/components/requestBodies/ListRequest"
      responses:
        "200":
          $ref: "#/components/responses/ListResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
        "409":
          $ref: "#/components/responses/ErrorConflict"
      tags:
        - lists
    delete:
      operationId: listsDelete
      summary: Delete list
      responses:
        "200":
          $ref: "#/components/responses/ListResponse"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - lists
  /lists/{list_id}/clear:
    parameters:
      - $ref: "#/components/parameters/ListId"
    post:
      operationId: listsClear
      summary: Clear list by deleting all items
      responses:
        "202":
          $ref: "#/components/responses/AcceptedResponse"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - lists
  /lists/{list_id}/fetch:
    parameters:
      - $ref: "#/components/parameters/ListId"
    post:
      operationId: listsFetch
      summary: Fetch and replace all items from datasource
      responses:
        "202":
          $ref: "#/components/responses/AcceptedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - lists
  /lists/{list_id}/items:
    parameters:
      - $ref: "#/components/parameters/ListId"
    get:
      operationId: itemsFindAll
      summary: Find all list items
      parameters:
        - $ref: "common/hal_structures.yml#/components/parameters/Page"
        - $ref: "common/hal_structures.yml#/components/parameters/PageSize"
      responses:
        "200":
          $ref: "#/components/responses/ItemsPagedResponse"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - items
    post:
      operationId: itemsCreate
      summary: Create list item
      requestBody:
        $ref: "#/components/requestBodies/ItemRequest"
      responses:
        "201":
          $ref: "#/components/responses/ItemResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
        "422":
          $ref: "#/components/responses/ErrorResourceLimitReached"
      tags:
        - items
  /lists/{list_id}/items/download:
    parameters:
      - $ref: "#/components/parameters/ListId"
    get:
      operationId: itemsDownload
      summary: Download list items as a CSV file format
      responses:
        "200":
          $ref: "#/components/responses/ItemsDownloadResponse"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - items
  /lists/{list_id}/items/{item_id}:
    parameters:
      - $ref: "#/components/parameters/ListId"
      - $ref: "#/components/parameters/ItemId"
    get:
      operationId: itemsGet
      summary: Get list item by id
      responses:
        "200":
          $ref: "#/components/responses/ItemResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - items
    put:
      operationId: itemsUpdate
      summary: Update list item
      requestBody:
        $ref: "#/components/requestBodies/ItemRequest"
      responses:
        "200":
          $ref: "#/components/responses/ItemResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - items
    delete:
      operationId: itemsDelete
      summary: Delete list item
      responses:
        "200":
          $ref: "#/components/responses/ItemResponse"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - items
  /lists/{list_id}/items/import:
    parameters:
      - $ref: "#/components/parameters/ListId"
    post:
      operationId: itemsImport
      summary: Import list items from a CSV file
      requestBody:
        $ref: "#/components/requestBodies/ItemImportRequest"
      responses:
        "200":
          $ref: "#/components/responses/ItemsImportResponse"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
        "422":
          $ref: "#/components/responses/ErrorResourceLimitReached"
      tags:
        - items
  /actions:
    get:
      operationId: actionsFindAll
      summary: Find all actions
      parameters:
        - $ref: "common/hal_structures.yml#/components/parameters/Page"
        - $ref: "common/hal_structures.yml#/components/parameters/PageSize"
      responses:
        "200":
          $ref: "#/components/responses/ActionsPagedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
      tags:
        - actions
    post:
      operationId: actionsCreate
      summary: Create action
      requestBody:
        $ref: "#/components/requestBodies/ActionRequest"
      responses:
        "201":
          $ref: "#/components/responses/ActionResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "409":
          $ref: "#/components/responses/ErrorConflict"
        "422":
          $ref: "#/components/responses/ErrorResourceLimitReached"
      tags:
        - actions
  /actions/{action_id}:
    parameters:
      - $ref: "#/components/parameters/ActionId"
    get:
      operationId: actionsGet
      summary: Get action by id
      responses:
        "200":
          $ref: "#/components/responses/ActionResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - actions
    put:
      operationId: actionsUpdate
      summary: Update action by id
      requestBody:
        $ref: "#/components/requestBodies/ActionRequest"
      responses:
        "200":
          $ref: "#/components/responses/ActionResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - actions
    delete:
      operationId: actionsDelete
      summary: Delete action by id
      responses:
        "200":
          $ref: "#/components/responses/ActionResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - actions
  /jobs:
    get:
      operationId: jobsFindAll
      summary: Find all jobs
      parameters:
        - $ref: "common/hal_structures.yml#/components/parameters/Page"
        - $ref: "common/hal_structures.yml#/components/parameters/PageSize"
      responses:
        "200":
          $ref: "#/components/responses/JobsPagedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
      tags:
        - jobs
    post:
      operationId: jobsCreate
      summary: Create job
      requestBody:
        $ref: "#/components/requestBodies/JobRequest"
      responses:
        "201":
          $ref: "#/components/responses/JobResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "409":
          $ref: "#/components/responses/ErrorConflict"
        "422":
          $ref: "#/components/responses/ErrorResourceLimitReached"
      tags:
        - jobs
  /jobs/{job_id}:
    parameters:
      - $ref: "#/components/parameters/JobId"
    get:
      operationId: jobsGet
      summary: Get job by id
      responses:
        "200":
          $ref: "#/components/responses/JobResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - jobs
    put:
      operationId: jobsUpdate
      summary: Update job by id
      requestBody:
        $ref: "#/components/requestBodies/JobRequest"
      responses:
        "200":
          $ref: "#/components/responses/JobResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - jobs
    delete:
      operationId: jobsDelete
      summary: Delete job
      responses:
        "200":
          $ref: "#/components/responses/JobResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - jobs
  /events:
    get:
      operationId: eventsFindAll
      summary: Find all events
      parameters:
        - $ref: "common/hal_structures.yml#/components/parameters/Page"
        - $ref: "common/hal_structures.yml#/components/parameters/PageSize"
      responses:
        "200":
          $ref: "#/components/responses/EventsPagedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
      tags:
        - events
  /runs:
    get:
      operationId: runsFindAll
      summary: Find all runs
      parameters:
        - $ref: "common/hal_structures.yml#/components/parameters/Page"
        - $ref: "common/hal_structures.yml#/components/parameters/PageSize"
      responses:
        "200":
          $ref: "#/components/responses/RunsPagedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
      tags:
        - runs
    post:
      operationId: runsSchedule
      summary: Start job.  This is an async operation which is performed in the background.
      requestBody:
        $ref: "#/components/requestBodies/RunRequest"
      responses:
        "202":
          $ref: "#/components/responses/AcceptedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
        "422":
          $ref: "#/components/responses/ErrorResourceLimitReached"
      tags:
        - runs
  /runs/{run_id}:
    parameters:
      - $ref: "#/components/parameters/RunId"
    get:
      operationId: runsGet
      summary: Get run by id
      responses:
        "200":
          $ref: "#/components/responses/RunResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - runs

  /runs/{run_id}/events:
    parameters:
      - $ref: "#/components/parameters/RunId"
    get:
      operationId: runsEvents
      summary: Get job run events
      parameters:
        - $ref: "common/hal_structures.yml#/components/parameters/Page"
        - $ref: "common/hal_structures.yml#/components/parameters/PageSize"
      responses:
        "200":
          $ref: "#/components/responses/EventsPagedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - runs
  /runs/{run_id}/summary:
    parameters:
      - $ref: "#/components/parameters/RunId"
    get:
      operationId: runsSummary
      summary: Get run statistics overview
      responses:
        "200":
          $ref: "#/components/responses/RunSummaryResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - runs
  /runs/{run_id}/cancel:
    parameters:
      - $ref: "#/components/parameters/RunId"
    post:
      operationId: runsCancel
      summary: Initiate run cancellation. This is an async operation which is performed in the background.
      responses:
        "202":
          $ref: "#/components/responses/AcceptedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - runs
  /webhooks/actions/status:
    post:
      operationId: webhooksActionStatus
      summary: Webhook endpoint to handle action call status for async actions
      responses:
        "200":
          $ref: "#/components/responses/OKWithNoContentResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
      tags:
        - webhooks
      security:
        - { }
  /webhooks/recipients/responses:
    post:
      operationId: webhooksRecipientResponse
      summary: Webhook endpoint to handle recipient responses
      responses:
        "200":
          $ref: "#/components/responses/OKWithNoContentResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
      tags:
        - webhooks
      security:
        - { }

components:
  securitySchemes:
    bearerAuth:
      scheme: bearer
      bearerFormat: JWT
      type: http

  parameters:
    ListId:
      name: list_id
      in: path
      description: Unique identifier for a list
      required: true
      schema:
        $ref: "#/components/schemas/ListId"

    ItemId:
      name: item_id
      in: path
      description: Unique identifier for a list item
      required: true
      schema:
        $ref: "#/components/schemas/ItemId"

    ActionId:
      name: action_id
      in: path
      description: Unique identifier for an action
      required: true
      schema:
        $ref: "#/components/schemas/ActionId"

    JobId:
      name: job_id
      in: path
      description: Unique identifier for a job
      required: true
      schema:
        $ref: "#/components/schemas/JobId"

    RunId:
      name: run_id
      in: path
      description: Unique identifier for a run
      required: true
      schema:
        $ref: "#/components/schemas/RunId"

  requestBodies:
    ListRequest:
      description: List definition
      required: true
      content:
        application/json:
          schema:
            oneOf:
              - allOf:
                  - $ref: "#/components/schemas/ResourceNameDescriptionAndTag"
                  - $ref: "#/components/schemas/ListEditableFields"
                  - $ref: "#/components/schemas/ListDatasourceManual"
                  - description: Manual
                    x-tab-id: Manual
              - allOf:
                  - $ref: "#/components/schemas/ResourceNameDescriptionAndTag"
                  - $ref: "#/components/schemas/ListEditableFields"
                  - $ref: "#/components/schemas/ListDatasourceSalesforce"
                  - description: Salesforce
                    x-tab-id: Salesforce

    ItemRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ItemEditableFields"

    ItemImportRequest:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                description: csv file of list items to import
                type: string
                format: binary

    ActionRequest:
      required: true
      content:
        application/json:
          schema:
            oneOf:
              - allOf:
                  - $ref: "#/components/schemas/ResourceNameDescriptionAndTag"
                  - $ref: "#/components/schemas/ActionEditableFields"
                  - $ref: "#/components/schemas/ActionHttpApiInvoke"
                  - description: HttpApiInvoke
                    x-tab-id: HttpApiInvoke

    JobRequest:
      required: true
      content:
        application/json:
          schema:
            oneOf:
              - allOf:
                  - $ref: "#/components/schemas/ResourceNameDescriptionAndTag"
                  - $ref: "#/components/schemas/JobEditableFields"
                  - $ref: "#/components/schemas/JobSegmentation"
                  - description: Segmentation
                    x-tab-id: Segmentation

    RunRequest:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ResourceNameDescriptionAndTag"
              - $ref: "#/components/schemas/RunEditableFields"

  responses:
    AcceptedResponse:
      description: Request accepted and is processed asynchronously on the server
      content:
        application/json:
          schema:
            type: string
            example: ""

    OKWithNoContentResponse:
      # note: future: change code to response 204 or need to define action to set the appropriate response code and payload
      description: Webhook succeed - no content response
      content:
        application/json:
          schema:
            type: string
            example: ""

    ErrorBadRequest:
      description: Invalid request parameter or body
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorBase"

    ErrorConflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorBase"

    ErrorResourceLimitReached:
      description: Resource limit reached / exceeded
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorBase"
          example:
            code: 422
            path: "/v0.1/bulk/lists"
            method: POST
            message: Resource limit has been reached
            timestamp: "2022-08-17T12:26:17.904Z"
            details:
              - resource: lists
                limit:
                  name: total
                  value: 10

    ListResponse:
      description: List response
      content:
        application/json:
          schema:
            type: object
            oneOf:
              - allOf:
                  - $ref: "#/components/schemas/ResourceNameDescriptionAndTag"
                  - $ref: "#/components/schemas/ListEditableFields"
                  - $ref: "#/components/schemas/ListDatasourceManual"
                  - $ref: "#/components/schemas/BulkBase"
                  - $ref: "#/components/schemas/ListSystemFields"
                  - description: Manual
                    x-tab-id: Manual
              - allOf:
                  - $ref: "#/components/schemas/ResourceNameDescriptionAndTag"
                  - $ref: "#/components/schemas/ListEditableFields"
                  - $ref: "#/components/schemas/ListDatasourceSalesforce"
                  - $ref: "#/components/schemas/BulkBase"
                  - $ref: "#/components/schemas/ListSystemFields"
                  - description: Salesforce
                    x-tab-id: Salesforce

    ListsPagedResponse:
      description: Lists paged response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PageResponseDto"
              - type: object
                properties:
                  _embedded:
                    type: object
                    readOnly: true
                    properties:
                      lists:
                        type: array
                        readOnly: true
                        items:
                          # todo: how to document response is a mix of list types
                          type: object
                example:
                  page: 1
                  page_size: 100
                  total_items: 2
                  total_pages: 1
                  _links:
                    self:
                      href: https://api-eu.vonage.com/v0.1/bulk/lists?page_size=100&page=1
                    prev:
                      href: https://api-eu.vonage.com/v0.1/bulk/lists?page_size=100&page=1
                    next:
                      href: https://api-eu.vonage.com/v0.1/bulk/lists?page_size=100&page=1
                    first:
                      href: https://api-eu.vonage.com/v0.1/bulk/lists?page_size=100&page=1
                  _embedded:
                    lists:
                      # - $ref: "#/components/examples/ListManualResponse/value"
                      - name: Recipients for demo
                        description: List of recipients for demo
                        tags:
                          - vip
                        attributes:
                          - name: firstName
                          - name: lastName
                            key: false
                          - name: number
                            alias: Phone
                            key: true
                        datasource:
                          type: manual
                        items_count: 1000
                        sync_status:
                          value: configured
                          dirty: false
                          data_modified: false
                          metadata_modified: false
                        id: af8a84b6-c712-4252-ac8d-6e28ac9317ce
                        created_at: "2022-06-23T13:13:16.491Z"
                        updated_at: "2022-06-23T13:13:16.491Z"
                      # - $ref: "#/components/examples/ListSalesforceResponse/value"
                      - name: Salesforce contacts
                        description: Salesforce contacts for campaign
                        tags:
                          - salesforce
                        attributes:
                          - name: Id
                            key: false
                          - name: Phone
                            key: true
                          - name: Email
                            key: false
                        datasource:
                          type: salesforce
                          integration_id: salesforce
                          soql: SELECT Id, LastName, FirstName, Phone, Email, OtherCountry FROM Contact

    ItemResponse:
      description: Item response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ListItemDto"

    ItemsPagedResponse:
      description: Items paged response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PageResponseDto"
              - type: object
                properties:
                  _embedded:
                    type: object
                    readOnly: true
                    properties:
                      items:
                        type: array
                        readOnly: true
                        items:
                          $ref: "#/components/schemas/ListItemDto"
                example:
                  total_items: 2
                  page: 1
                  page_size: 100
                  total_pages: 1
                  _links:
                    self:
                      href: https://api-eu.vonage.com/v0.1/bulk/lists/060b9c33-6c81-4fe4-9621-b10c0a4c06f3/items/?page_size=100&page=1
                    prev:
                      href: https://api-eu.vonage.com/v0.1/bulk/lists/060b9c33-6c81-4fe4-9621-b10c0a4c06f3/items/?page_size=100&page=1
                    next:
                      href: https://api-eu.vonage.com/v0.1/bulk/lists/060b9c33-6c81-4fe4-9621-b10c0a4c06f3/items/?page_size=100&page=1
                    first:
                      href: https://api-eu.vonage.com/v0.1/bulk/lists/060b9c33-6c81-4fe4-9621-b10c0a4c06f3/items/?page_size=100&page=1
                  _embedded:
                    items:
                      # - $ref: "#/components/examples/ListItemResponse"
                      - id: 6e26d247-e074-4f68-b72b-dd92aa02c7e0
                        created_at: "2022-08-03T08:54:21.122Z"
                        updated_at: "2022-08-03T08:54:21.122Z"
                        list_id: 060b9c33-6c81-4fe4-9621-b10c0a4c06f3
                        data:
                          Id: "0038d00000B22zbAAB"
                          Email: info@salesforce.com
                          Phone: "(415) 555-1212"
                          LastName: Minor
                          FirstName: Geoff
                          OtherCountry: Canada
                      - id: f7c029ad-93c3-469c-9267-73c3c6864161
                        created_at: "2022-08-03T08:54:21.122Z"
                        updated_at: "2022-08-03T08:54:21.122Z"
                        list_id: 060b9c33-6c81-4fe4-9621-b10c0a4c06f3
                        data:
                          Id: "0038d00000B22zcAAB"
                          Email: info@salesforce.com
                          Phone: "(415) 555-1212"
                          LastName: White
                          FirstName: Carole
                          OtherCountry:

    ItemsDownloadResponse:
      description: csv file of list items (stream response)
      headers:
        transfer-encoding:
          schema:
            enum:
              - chunked
            type: string
            example: chunked
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary

    ItemsImportResponse:
      description: Importing list item from file response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ApiDataAffected"
              - type: object
                example:
                  $ref: "#/components/examples/ItemsImportExample/value"

    ActionResponse:
      description: Action response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BulkBase"
              - $ref: "#/components/schemas/ResourceNameDescriptionAndTag"
              - $ref: "#/components/schemas/ActionEditableFields"
              - $ref: "#/components/schemas/ActionHttpApiInvoke"
              - description: HttpApiInvoke
                x-tab-id: HttpApiInvoke

    ActionsPagedResponse:
      description: Actions paged response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PageResponseDto"
              - type: object
                properties:
                  _embedded:
                    type: object
                    readOnly: true
                    properties:
                      actions:
                        type: array
                        readOnly: true
                        items:
                          type: object
                example:
                  total_items: 1
                  page: 1
                  page_size: 100
                  total_pages: 1
                  _links:
                    self:
                      href: https://api-eu.vonage.com/v0.1/bulk/actions?page_size=100&page=1
                    prev:
                      href: https://api-eu.vonage.com/v0.1/bulk/actions?page_size=100&page=1
                    next:
                      href: https://api-eu.vonage.com/v0.1/bulk/actions?page_size=100&page=1
                    first:
                      href: https://api-eu.vonage.com/v0.1/bulk/actions?page_size=100&page=1
                  _embedded:
                    actions:
                      # - $ref: "#/components/examples/ActionSendSMSResponse"
                      - name: vg-send-sms
                        description: Send text message using Vonage messaging APIs
                        parameters:
                          - type: string
                            required: true
                            name: fromNumber
                          - type: string
                            required: true
                            name: toNumber
                          - type: string
                            required: true
                            name: message
                          - type: secret
                            required: true
                            name: vonage-jwt-token
                            default: vng-prd-messaging-api
                        command:
                          type: http-api-invoke
                          url: https://api.nexmo.com/v1/messages
                          method: post
                          headers:
                            - name: Content-Type
                              value: application/json
                            - name: Authorization
                              value: Bearer {{ parameters.vonage-jwt-token }}
                          payload:
                            to: "{{ parameters.toNumber }}"
                            message_type: text
                            from: "{{ parameters.fromNumber }}"
                            channel: sms
                            text: "{{ parameters.message }}"
                          response:
                            sync:
                              invocation_id: "{{ response.payload.message_uuid }}"
                              value: "{{ response.statusCode }}"
                              success:
                                values:
                                  - "200"
                                  - "201"
                                  - "202"
                              error:
                                code: "{{ response.payload.statusCode }}"
                                details: "{{ response.payload.error.details }}"
                            async:
                              invocation_id: "{{ response.payload.message_uuid }}"
                              status:
                                value: "{{ response.payload.status }}"
                                success:
                                  values:
                                    - delivered
                                info:
                                  values:
                                    - submitted
                                error:
                                  values:
                                    - rejected
                                    - undeliverable
                                  details: "{{ response.payload.error.details }}"
                        timeout_seconds: 5
                        id: 99ea10e0-1f14-4f55-b976-3c88ea8ec4cd
                        created_at: "2022-06-23T17:45:31.782Z"
                        updated_at: "2022-06-23T17:45:31.782Z"

    JobResponse:
      description: Job response
      content:
        application/json:
          schema:
            oneOf:
              - allOf:
                  - $ref: "#/components/schemas/BulkBase"
                  - $ref: "#/components/schemas/ResourceNameDescriptionAndTag"
                  - $ref: "#/components/schemas/JobEditableFields"
                  - $ref: "#/components/schemas/JobSegmentation"
                  - description: Segmentation
                    x-tab-id: Segmentation

    JobsPagedResponse:
      description: Jobs paged response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PageResponseDto"
              - type: object
                properties:
                  _embedded:
                    type: object
                    readOnly: true
                    properties:
                      jobs:
                        type: array
                        readOnly: true
                        items:
                          type: object
                example:
                  total_items: 1
                  page: 1
                  page_size: 100
                  total_pages: 1
                  _links:
                    self:
                      href: https://api-eu.vonage.com/v0.1/bulk/jobs?page_size=2&page=1
                    prev:
                      href: https://api-eu.vonage.com/v0.1/bulk/jobs?page_size=2&page=1
                    next:
                      href: https://api-eu.vonage.com/v0.1/bulk/jobs?page_size=2&page=1
                    first:
                      href: https://api-eu.vonage.com/v0.1/bulk/jobs?page_size=2&page=1
                  _embedded:
                    jobs:
                      - name: send sms with optional end-user response
                        tags:
                          - marketing
                          - uk
                        definition:
                          type: segmentation-job
                          recipients:
                            include:
                              - id: c6a4704e-2ddd-47b7-b79c-7df38feafb3f
                                type: list
                            exclude:
                              - id: fba7c209-ebb9-4b14-8acb-09a803d4f0a0
                                type: list
                          segmentations:
                            - condition:
                                expression: item.salary == 1000 || ['UK', 'USA'].includes(item.country)
                              action_call:
                                action_ref:
                                  id: 466ce4a4-9cec-40c0-83ab-c3fa64e48b6f
                                  type: action
                                parameters:
                                  - name: fromNumber
                                    value: "447418365541"
                                  - name: toNumber
                                    value: "{{ item.number }}"
                                  - name: message
                                    value:
                                      Dear {{ item.firstName }}, {{ item.lastName }} :)\n This's our 1st
                                      SMS communication from Vonage campaign.\nReply back with STOP if you want
                                      to stop receiving our messages
                              name: text vip customers
                              description: text UK and USA vip customers
                              recipient:
                                correlation_id: "{{item.number}}"
                          events_handler:
                            matching_strategy: match-first
                            matchers:
                              - condition:
                                  expression: event.text?.toLowerCase().includes('stop')
                                action_call:
                                  action_ref:
                                    type: action
                                    id: bd795581-9a93-48b0-a4bc-3b7509bf6e4d
                                  parameters:
                                    - name: listId
                                      value: fba7c209-ebb9-4b14-8acb-09a803d4f0a0
                                    - name: number
                                      value: "{{ event.data.from }}"
                                name: opt-out
                                description: unsubscribe
                                recipient:
                                  correlation_id: "{{ event.data.from }}"
                        id: e721113d-0948-4edb-b4af-e3f0578d708c
                        created_at: "2022-06-24T07:49:33.748Z"
                        updated_at: "2022-06-24T07:49:33.748Z"

    RunResponse:
      description: Run response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RunDto"

    RunsPagedResponse:
      description: Runs paged response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PageResponseDto"
              - type: object
                properties:
                  _embedded:
                    type: object
                    readOnly: true
                    properties:
                      runs:
                        type: array
                        readOnly: true
                        items:
                          $ref: "#/components/schemas/RunDto"
                example:
                  total_items: 1
                  page: 1
                  page_size: 100
                  total_pages: 1
                  _links:
                    self:
                      href: https://api-eu.vonage.com/v0.1/bulk/runs?page_size=100&page=1
                    prev:
                      href: https://api-eu.vonage.com/v0.1/bulk/runs?page_size=100&page=1
                    next:
                      href: https://api-eu.vonage.com/v0.1/bulk/runs?page_size=100&page=1
                    first:
                      href: https://api-eu.vonage.com/v0.1/bulk/runs?page_size=100&page=1
                  _embedded:
                    runs:
                      # - $ref: "#/components/examples/SegmentationRunResponse"
                      - name: E2E Demo run
                        job_id: e721113d-0948-4edb-b4af-e3f0578d708c
                        status: scheduled
                        start_at: "2022-06-24T04:06:36.000Z"
                        end_at: "2022-06-24T08:57:55.917Z"
                        id: 51aca838-2cf6-4100-b0d2-e74ac0e95c88
                        created_at: "2022-06-24T07:57:56.301Z"
                        updated_at: "2022-06-24T07:57:56.301Z"

    RunSummaryResponse:
      description: Run summary response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RunSummaryDto"

    EventsPagedResponse:
      description: Events paged response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PageResponseDto"
              - type: object
                properties:
                  _embedded:
                    type: object
                    readOnly: true
                    properties:
                      events:
                        type: array
                        readOnly: true
                        items:
                          oneOf:
                            - $ref: "#/components/schemas/ActionCallSucceededEvent"
                            - $ref: "#/components/schemas/ActionCallFailedEvent"
                            - $ref: "#/components/schemas/ActionCallInfoEvent"
                            - $ref: "#/components/schemas/RecipientResponseEvent"
                            - $ref: "#/components/schemas/RunItemSkippedEvent"
                            - $ref: "#/components/schemas/RunItemFailedEvent"
                example:
                  total_items: 1
                  page: 1
                  page_size: 100
                  total_pages: 1
                  _links:
                    self:
                      href: https://api-eu.vonage.com/v0.1/bulk/events?page_size=100&page=1
                    prev:
                      href: https://api-eu.vonage.com/v0.1/bulk/events?page_size=100&page=1
                    next:
                      href: https://api-eu.vonage.com/v0.1/bulk/events?page_size=100&page=1
                    first:
                      href: https://api-eu.vonage.com/v0.1/bulk/events?page_size=100&page=1
                  _embedded:
                    events:
                      - occurred_at: "2022-08-07T13:18:21.970Z"
                        type: action-call-succeeded
                        id: e8e1eb4d-61e0-4099-8fa7-c96f1c0764ba
                        job_id: c68e871a-c239-474d-a905-7b95f4563b7e
                        src_ctx: et-e4ab4b75-9e7c-4f26-9328-394a5b842648
                        action_id: 26c5bbe2-113e-4201-bd93-f69e0a03d17f
                        data:
                          url: https://postman-echo.com/post
                          args: { }
                          data:
                            from: ""
                          form: { }
                          json:
                            from: ""
                          files: { }
                          headers:
                            host: postman-echo.com
                            user-agent: got (https://github.com/sindresorhus/got)
                            content-type: application/json
                            content-length: "11"
                            accept-encoding: gzip, deflate, br
                            x-amzn-trace-id: Root=1-62efbb9e-53636b7b794accb87a3d662f
                            x-forwarded-port: "443"
                            x-nexmo-trace-id: 8a6fed94-7296-4a39-9c52-348f12b4d61a
                            x-forwarded-proto: https
                        run_id: 7d0d4e5f-6453-4c63-87cf-f95b04377324
                        recipient_id: "14806904549"
                      - occurred_at: "2022-08-07T13:18:20.289Z"
                        type: recipient-response
                        id: 8c8e9894-81be-4f6e-88d4-046b6c70ff8c
                        job_id: c68e871a-c239-474d-a905-7b95f4563b7e
                        src_ctx: et-e4ab4b75-9e7c-4f26-9328-394a5b842648
                        data:
                          from: "441632960411"
                          text: Erin J. Yearby
                        run_id: 7d0d4e5f-6453-4c63-87cf-f95b04377324
                        recipient_id: "441632960758"

  schemas:
    Href:
      type: object
      properties:
        href:
          type: string
          format: url
          example: https://api-eu.vonage.com/v0.1/bulk/lists?page=5&page_size=10
      required:
        - href

    HalLinks:
      type: object
      properties:
        first:
          $ref: "#/components/schemas/Href"
        self:
          $ref: "#/components/schemas/Href"
        prev:
          $ref: "#/components/schemas/Href"
        next:
          $ref: "#/components/schemas/Href"
      required:
        - first
        - self

    PageResponseDto:
      allOf:
        - $ref: "common/hal_structures.yml#/components/schemas/PagedResponse"
        - type: object
          properties:
            _links:
              $ref: "#/components/schemas/HalLinks"
            _embedded:
              type: object
              additionalProperties: true
              readOnly: true
          required:
            - total_items
            - total_pages
            - page
            - page_size
            - _links
            - _embedded

    ErrorBase:
      description: default error attributes in Proactive Connect implementation
      allOf:
        # todo: align error response with error spec
        #        - $ref: "common/common_errors.yml#/components/responses/DefaultError/content/application~1json/schema"
        - type: object
          properties:
            code:
              description: http status code
              example: 400
            path:
              description: url path to the requested resource
              example: /v0.1/bulk/lists?page=-1&page_size=2
            method:
              description: http method
              example: GET
            message:
              description: additional information on the error or it's root cause
              type: object
              properties:
                status_code:
                  description: http status code
                  example: 400
                error:
                  description: error string
                  type: string
                  example: Bad request
                message:
                  description: list of error description
                  type: array
                  items:
                    type: string
                  example:
                    - "page must not be less than 1"
                    - "name must be longer than or equal to 1 characters"
                    - "name must be a string"

    ApiDataAffected:
      description: Count of affected data records as a result of the API action
      type: object
      properties:
        inserted:
          type: number
          example: 50
        updated:
          type: number
          example: 0
        deleted:
          type: number
          example: 0

    ListId:
      description: Unique identifier for a list
      type: string
      format: uuid
      example: 4cb98f71-a879-49f7-b5cf-2314353eb52c

    ItemId:
      description: Unique identifier for a list item
      type: string
      format: uuid
      example: 6e26d247-e074-4f68-b72b-dd92aa02c7e0

    ActionId:
      description: Unique identifier for an action
      type: string
      format: uuid
      example: 99ea10e0-1f14-4f55-b976-3c88ea8ec4cd

    JobId:
      description: Unique identifier for a job
      type: string
      format: uuid
      example: e721113d-0948-4edb-b4af-e3f0578d708c

    RunId:
      description: Unique identifier for a run
      type: string
      format: uuid
      example: 51aca838-2cf6-4100-b0d2-e74ac0e95c88

    InvocationId:
      description: Identifier of an action invocation
      type: string
      format: uuid
      example: "{{ event.data.reqId }}"

    RecipientId:
      description: String identifier of a recipient, for example his email, phone number etc
      type: string
      example: 15551584817

    RunItemId:
      description: String identifier the item id during a job run - this is the list item id which is copied while taking the list snapshot
      type: string
      format: uuid
      example: 51aca838-2cf6-4100-b0d2-e74ac0e95c88

    ClientRef:
      description: Client reference of up to 100 characters. The reference will be present in every relevant event.
      type: string
      maximum: 100
      example: c4ad1a21-56ef-4a75-8dc9-0d2b2449c794

    Tag:
      description: up to 10 custom strings assigned with a resource - each must be between 1 and 15 characters
      type: array
      minItems: 0
      maxItems: 10
      items:
        type: string
      example: [ 'vip', 'sport' ]

    BulkBase:
      description: Common attributes of any Proactive Connect API resource
      type: object
      properties:
        id:
          type: string
          readOnly: true
          format: uuid
          example: 29192c4a-4058-49da-86c2-3e349d1065b7
        created_at:
          type: string
          format: date-time
          readOnly: true
          example: "2022-06-19T17:59:28.085Z"
        updated_at:
          type: string
          format: date-time
          readOnly: true
          example: "2022-06-19T17:59:28.085Z"

    ResourceNameDescriptionAndTag:
      description: define the name and description attributes for any resource
      type: object
      properties:
        name:
          description: the name of the resource
          type: string
          maxLength: 255
          example: my name
        description:
          description: the description of the resource
          type: string
          maxLength: 1024
          example: my description
        tags:
          $ref: "#/components/schemas/Tag"
      required:
        - name

    ListAttribute:
      type: object
      properties:
        name:
          description: list attribute name
          type: string
          pattern: ^[a-zA-Z_][a-zA-Z\d_]*$
          maxLength: 50
          example: phone_number
        alias:
          description: alternative name to use for this attribute. Use when you wish to correlate between 2 or more list that are using different attribute names for the same semantic data
          type: string
          pattern: ^[a-zA-Z_][a-zA-Z\d_]*$
          maxLength: 50
          example: phone
        key:
          description: set to true if this attribute should be used to correlate between 2 or more lists
          type: boolean
          default: false
      required:
        - name

    ListEditableFields:
      type: object
      properties:
        attributes:
          minItems: 0
          maxItems: 50
          type: array
          items:
            $ref: "#/components/schemas/ListAttribute"

    ListDatasourceManual:
      type: object
      properties:
        datasource:
          description: Manual datasource
          type: object
          properties:
            type:
              type: string
              enum:
                - manual
              example: manual

    ListDatasourceSalesforce:
      type: object
      properties:
        datasource:
          description: Salesforce datasource
          type: object
          properties:
            type:
              type: string
              enum:
                - salesforce
              example: salesforce
            integration_id:
              description: integration id defining salesforce credential to use for this datasource
              type: string
              example: salesforce_credentials
            soql:
              description: salesforce query defining which data to fetch from salesforce
              type: string
              example: select Id, LastName, FirstName, Phone, Email FROM Contact
          required:
            - integration_id
            - soql

    ListSyncStatusEnum:
      description: sync status enumeration
      type: string
      readOnly: true
      enum:
        - configured
        - clearing
        - fetching
        - paused
        - cancelled
        - completed
        - failed
      example: configured

    ListSyncStatus:
      description: synchronization status between the list content (items) and it's datasource
      type: object
      properties:
        value:
          $ref: "#/components/schemas/ListSyncStatusEnum"
        details:
          description: provide details on sync status
          type: string
          example: Not found
        metadata_modified:
          description: List metadata (definition) is modified since latest sync.
          type: boolean
          example: false
        data_modified:
          description: One or more list items were added, removed and/or modified since latest sync.
          type: boolean
          example: true
        dirty:
          description: Indicates if the list content or metadata were modified since last sync.
          type: boolean
          example: true

    ListSystemFields:
      description: Fields that are added to a list by the system
      type: object
      readOnly: true
      properties:
        sync_status:
          $ref: "#/components/schemas/ListSyncStatus"
        items_count:
          type: number
          example: 500

    ItemEditableFields:
      description: Fields that are editable for an item
      type: object
      properties:
        # todo: define the item data structure
        data:
          description: custom item data attributes
          type: object
          additionalProperties: true
          minProperties: 1
          example:
            firstName: Adrianna
            lastName: Campbell
            phone: 15550067383
      required:
        - data

    ItemEmbedded:
      type: object
      additionalProperties: true
      minProperties: 1
      example:
        firstName: Adrianna
        lastName: Campbell
        phone: 15550067383

    ItemSystemFields:
      description: Fields that are added to a list item by the system
      type: object
      readOnly: true
      properties:
        list_id:
          $ref: "#/components/schemas/ListId"

    ListItemDto:
      description: Item resource
      allOf:
        - $ref: "#/components/schemas/BulkBase"
        - $ref: "#/components/schemas/ItemEditableFields"
        - $ref: "#/components/schemas/ItemSystemFields"
      required:
        - list_id
        - data

    ParameterTypeEnum:
      type: string
      enum:
        - string
        - secret
      default: string
      example: string

    ParameterName:
      type: string
      minLength: 1
      maxLength: 50
      pattern: ^[a-zA-Z_][a-zA-Z\d_]*$
      example: from_number

    ParameterDto:
      description: parameters definition
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ParameterName"
        type:
          $ref: "#/components/schemas/ParameterTypeEnum"
        default:
          type: string
          example: '15554764733'
        description:
          description: the description of the resource
          type: string
          maxLength: 1024
          example: number the sms is sent from
        required:
          type: boolean
          default: true
          example: false

    HttpApiInvokeResponseStatus:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 10
          example:
            - "202"

    HttpApiInvokeResponseErrorStatus:
      allOf:
        - $ref: "#/components/schemas/HttpApiInvokeResponseStatus"
        - type: object
          properties:
            details:
              type: string
              example: "{{ response.payload.error.details }}"
      required:
        - details

    HttpResponseDetails:
      type: object
      properties:
        invocation_id:
          $ref: "#/components/schemas/InvocationId"
        value:
          description: expression used to extract the status value from the response for example in a sync response, this would be the {{ response.statusCode }} or a payload attribute {{ response.payload.status }}
          type: string
          default: "{{ response.statusCode }}"
          example: "{{ response.statusCode }}"
        success:
          oneOf:
            - $ref: "#/components/schemas/HttpApiInvokeResponseStatus"
            - type: object
              properties:
                values:
                  type: array
                  items:
                    type: string
                  default:
                    - "200"
                    - "201"
                    - "202"
                  example:
                    - "200"
        info:
          $ref: "#/components/schemas/HttpApiInvokeResponseStatus"
        error:
          $ref: "#/components/schemas/HttpApiInvokeResponseErrorStatus"
        unmapped_values_status:
          type: string
          enum:
            - success
            - info
            - error
          default: error
          example: error
      required:
        - invocation_id

    ParameterValue:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ParameterName"
        value:
          type: string
          example: '15554764733'
      required:
        - name
        - value

    ActionHttpApiInvoke:
      description: define attributes to execute an http action
      type: object
      required:
        - command
      properties:
        command:
          type: object
          required:
            - url
          properties:
            type:
              type: string
              enum:
                - http-api-invoke
              default: http-api-invoke
              example: http-api-invoke
            url:
              type: string
              format: uri
              maxLength: 2048
              example: https://api.nexmo.com/v1/messages
            method:
              type: string
              default: post
              example: post
            headers:
              type: array
              items:
                $ref: "#/components/schemas/ParameterValue"
              example:
                - name: Content-Type
                  value: application/json
                - name: Authorization
                  value: Bearer {{ parameters.vonage-jwt-token }}
            payload:
              type: object
              additionalProperties: true
              example:
                channel: sms
                to: "{{ parameters.toNumber }}"
                from: "{{ parameters.fromNumber }}"
                message_type: text
                text: "{{ parameters.message }}"
            response:
              type: object
              properties:
                # todo: set example for sync
                sync:
                  $ref: "#/components/schemas/HttpResponseDetails"
                async:
                  $ref: "#/components/schemas/HttpResponseDetails"

    ActionEditableFields:
      type: object
      properties:
        parameters:
          type: array
          items:
            $ref: "#/components/schemas/ParameterDto"
        timeout_seconds:
          type: number
          default: 5
          minimum: 0
          maximum: 60
          example: 5

    ListRef:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ListId"
        type:
          type: string
          enum:
            - list
          example: list
      required:
        - id
        - type

    RecipientsEmbedded:
      type: object
      properties:
        embedded:
          type: array
          minItems: 1
          maxItems: 1000
          items:
            $ref: "#/components/schemas/ItemEmbedded"
          example:
            - phoneNumber: 2025550183
              firstName: Mary
              personalLink: 3gpNYkV
            - phoneNumber: 2025550101
              firstName: Allen
              personalLink: 2kZMoG8
      required:
        - embedded

    RecipientsListsRef:
      type: object
      properties:
        include:
          minItems: 1
          maxItems: 10
          type: array
          items:
            $ref: "#/components/schemas/ListRef"
        exclude:
          minItems: 1
          maxItems: 10
          type: array
          items:
            $ref: "#/components/schemas/ListRef"
      example:
        include:
          - type: list
            id: 42a5313b-ea90-4166-a950-00eb6f95dfef
        exclude:
          - type: list
            id: 42a5313b-ea90-4166-a950-00eb6f95dfef
      required:
        - include

    Expression:
      type: object
      properties:
        expression:
          type: string
          description: short expression in javascript, note that you can use item attributes in expression
          maxLength: 256
          example: item.salary > 5000
      required:
        - expression

    ActionRef:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: c4fd1c9e-80e7-4db1-94cb-8ec0edc154a4
        type:
          type: string
          enum:
            - action
          example: action
      required:
        - id
        - type

    ActionCall:
      type: object
      properties:
        action_ref:
          $ref: "#/components/schemas/ActionRef"
        parameters:
          maxItems: 20
          type: array
          items:
            $ref: "#/components/schemas/ParameterValue"
          example:
            - name: fromNumber
              value: "447418365541"
            - name: toNumber
              value: "{{ item.number }}"
      required:
        - action_ref

    RecipientCorrelation:
      type: object
      properties:
        correlation_id:
          type: string
          example: "{{ event.data.from }}"
      required:
        - correlation_id

    Rule:
      type: object
      properties:
        name:
          description: the name of the resource
          type: string
          maxLength: 255
          example: uk customers
        description:
          description: the description of the resource
          type: string
          maxLength: 1024
        condition:
          $ref: "#/components/schemas/Expression"
        action_call:
          $ref: "#/components/schemas/ActionCall"
        recipient:
          $ref: "#/components/schemas/RecipientCorrelation"
      required:
        - name
        - condition
        - action_call
        - recipient

    MatchingStrategyTypeEnum:
      type: string
      default: match-first
      enum:
        - match-first
        - match-all
      example: match-first

    EventsHandler:
      type: object
      properties:
        matching_strategy:
          $ref: "#/components/schemas/MatchingStrategyTypeEnum"
        matchers:
          type: array
          items:
            $ref: "#/components/schemas/Rule"
      required:
        - matchers

    JobSegmentation:
      description: define segmentation job attributes
      type: object
      required:
        - definition
      properties:
        definition:
          type: object
          properties:
            type:
              type: string
              enum:
                - segmentation-job
              default: segmentation-job
              example: segmentation-job
            recipients:
              $ref: "#/components/schemas/RecipientsListsRef"
            segmentations:
              type: array
              items:
                $ref: "#/components/schemas/Rule"
            events_handler:
              $ref: "#/components/schemas/EventsHandler"
          required:
            - segmentations

    JobEditableFields:
      type: object
      properties:
        parameters:
          type: array
          items:
            $ref: "#/components/schemas/ParameterDto"

    RunEditableFields:
      description: Fields that are editable for a run
      type: object
      properties:
        job_id:
          $ref: "#/components/schemas/JobId"
        parameters:
          maxItems: 20
          type: array
          items:
            $ref: "#/components/schemas/ParameterValue"
          example:
            - name: fromNumber
              value: "447418365541"
            - name: message
              value: "Hi {{ item.firstName }}, click https://bit.ly/{{ item.personalLink }} for your special deals."
        client_ref:
          $ref: "#/components/schemas/ClientRef"
        schedule:
          type: object
          properties:
            start_at:
              type: string
              format: date-time
              example: "2022-06-06T05:46:00.936Z"
            end_at:
              type: string
              format: date-time
              example: "2022-06-20T05:46:00.936Z"
          required:
            - start_at
      required:
        - job_id
        - schedule

    RunStatusEnum:
      type: string
      readOnly: true
      enum:
        - scheduled
        - running
        - paused
        - cancelled
        - cancelling
        - failed
        - completed
      example: running

    RunStatus:
      type: object
      properties:
        value:
          $ref: "#/components/schemas/RunStatusEnum"
        details:
          type: string
          readOnly: true
          example: Not found

    RunSystemFields:
      description: Fields that are added to a run by the system
      type: object
      properties:
        status:
          $ref: "#/components/schemas/RunStatus"

    RunDto:
      allOf:
        - $ref: "#/components/schemas/BulkBase"
        - $ref: "#/components/schemas/ResourceNameDescriptionAndTag"
        - $ref: "#/components/schemas/RunEditableFields"
        - $ref: "#/components/schemas/RunSystemFields"

    RunError:
      type: object
      properties:
        code:
          type: string
        details:
          type: string
          example: Not found
      required:
        - details

    StatisticsEventType:
      type: string
      enum:
        - action-call-succeeded
        - action-call-failed
        - action-call-info
        - recipient-response
        - run-item-skipped
        - run-item-failed
        - run-item-submitted
        - run-items-total
        - run-items-ready
        - run-items-excluded
      example: action-call-succeeded
      readOnly: true

    StatisticsEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 92cc64e5-f62b-464f-ab9c-4376bd05adfc
        type:
          $ref: "#/components/schemas/StatisticsEventType"
        src_ctx:
          type: string
          example: uk recipient
        occurred_at:
          type: string
          format: date-time
          example: "2022-06-19T20:41:59.085Z"
        data:
          type: object
          example:
            city: North Assunta
            country: Iceland
            state: PH
      required:
        - id
        - type
        - occurred_at
        - data
        - src_ctx

    ExecutionStatisticsEvent:
      allOf:
        - $ref: "#/components/schemas/StatisticsEvent"
        - type: object
          properties:
            job_id:
              $ref: "#/components/schemas/JobId"
            run_id:
              $ref: "#/components/schemas/RunId"
            recipient_id:
              $ref: "#/components/schemas/RecipientId"
            run_item_id:
              $ref: "#/components/schemas/RunItemId"
      required:
        - job_id
        - run_id
        - recipient_id

    ActionStatisticsEvent:
      allOf:
        - $ref: "#/components/schemas/ExecutionStatisticsEvent"
        - type: object
          properties:
            action_id:
              $ref: "#/components/schemas/ActionId"
            invocation_id:
              $ref: "#/components/schemas/InvocationId"
      required:
        - action_id

    ActionCallFailedEvent:
      allOf:
        - $ref: "#/components/schemas/ActionStatisticsEvent"
        - type: object
          properties:
            type:
              type: string
              example: action-call-failed
            error:
              $ref: "#/components/schemas/RunError"

    ActionCallInfoEvent:
      allOf:
        - $ref: "#/components/schemas/ActionStatisticsEvent"
        - type: object
          properties:
            type:
              type: string
              example: action-call-info

    ActionCallSucceededEvent:
      allOf:
        - $ref: "#/components/schemas/ActionStatisticsEvent"

    RunItemSkippedEvent:
      allOf:
        - $ref: "#/components/schemas/ExecutionStatisticsEvent"
        - type: object
          properties:
            type:
              type: string
              example: run-item-skipped

    RunItemFailedEvent:
      allOf:
        - $ref: "#/components/schemas/ExecutionStatisticsEvent"
        - type: object
          properties:
            type:
              type: string
              example: run-item-failed
            error:
              $ref: "#/components/schemas/RunError"

    RecipientResponseEvent:
      allOf:
        - $ref: "#/components/schemas/ExecutionStatisticsEvent"
        - type: object
          properties:
            type:
              type: string
              example: recipient-response

    RunStatsMetric:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/StatisticsEventType"
        value:
          type: number
          readOnly: true
          example: 226
        statistics:
          type: string
          readOnly: true
          enum:
            - distinct-count-by-recipient
            - count
          example: distinct-count-by-recipient
        occurred_at_min:
          type: string
          format: date-time
          readOnly: true
        occurred_at_max:
          type: string
          format: date-time
          readOnly: true
      required:
        - name
        - value
        - statistics

    RunSummaryDto:
      type: object
      properties:
        run_id:
          $ref: "#/components/schemas/RunId"
        summary:
          readOnly: true
          type: array
          items:
            $ref: "#/components/schemas/RunStatsMetric"
          example:
            - value: 3
              name: action-call-succeeded
              statistics: distinct-count-by-recipient
              occurred_at_min: "2022-06-20T05:52:49.063Z"
              occurred_at_max: "2022-06-20T05:52:49.099Z"
            - value: 0
              name: action-call-failed
              statistics: distinct-count-by-recipient
      required:
        - run_id
        - summary

  examples:
    ListManualRequestExample:
      value:
        name: Recipients for demo
        description: List of recipients for demo
        tags:
          - vip
        attributes:
          - name: firstName
          - name: lastName
            key: false
          - name: number
            alias: Phone
            key: true

    ListManualResponseExample:
      value:
        name: Recipients for demo
        description: List of recipients for demo
        tags:
          - vip
        attributes:
          - name: firstName
          - name: lastName
            key: false
          - name: number
            alias: Phone
            key: true
        datasource:
          type: manual
        items_count: 1000
        sync_status:
          value: configured
          dirty: false
          data_modified: false
          metadata_modified: false
        id: af8a84b6-c712-4252-ac8d-6e28ac9317ce
        created_at: "2022-06-23T13:13:16.491Z"
        updated_at: "2022-06-23T13:13:16.491Z"

    ListSalesforceRequestExample:
      value:
        name: Salesforce contacts
        description: Salesforce contacts for campaign
        tags:
          - salesforce
        attributes:
          - key: false
            name: Id
          - key: false
            name: Phone
          - key: false
            name: Email
        datasource:
          type: salesforce
          integration_id: salesforce
          soql: SELECT Id, LastName, FirstName, Phone, Email, OtherCountry FROM Contact

    ListSalesforceResponseExample:
      value:
        name: Salesforce contacts
        description: Salesforce contacts for campaign
        tags:
          - salesforce
        attributes:
          - name: Id
            key: false
          - name: Phone
            key: false
          - name: Email
            key: false
        datasource:
          type: salesforce
          integration_id: salesforce
          soql: SELECT Id, LastName, FirstName, Phone, Email, OtherCountry FROM Contact
        items_count: 25000
        sync_status:
          value: configured
          metadata_modified: false
          data_modified: false
          dirty: false
        id: 4cb98f71-a879-49f7-b5cf-2314353eb52c
        created_at: "2022-08-02T13:22:04.267Z"
        updated_at: "2022-08-02T13:22:04.267Z"

    ItemsResponseExample:
      value:
        id: 6e26d247-e074-4f68-b72b-dd92aa02c7e0
        created_at: "2022-08-03T08:54:21.122Z"
        updated_at: "2022-08-03T08:54:21.122Z"
        list_id: 060b9c33-6c81-4fe4-9621-b10c0a4c06f3
        data:
          Id: "0038d00000B22zbAAB"
          Email: info@salesforce.com
          Phone: "(415) 555-1212"
          LastName: Minor
          FirstName: Geoff
          OtherCountry: Canada

    ItemsImportExample:
      value:
        inserted: 10000

    ActionSendSMSRequestExample:
      value:
        name: vg-send-sms
        description: Send text message using Vonage messaging APIs
        parameters:
          - name: fromNumber
            type: string
            required: true
          - name: toNumber
            type: string
            required: true
          - name: message
            type: string
            required: true
          - name: vonage-jwt-token
            type: secret
            required: true
            default: vng-prd-messaging-api
        command:
          type: http-api-invoke
          url: https://api.nexmo.com/v1/messages
          method: post
          headers:
            - name: Content-Type
              value: application/json
            - name: Authorization
              value: Bearer {{ parameters.vonage-jwt-token }}
          payload:
            channel: sms
            from: "{{ parameters.fromNumber }}"
            to: "{{ parameters.toNumber }}"
            message_type: text
            text: "{{ parameters.message }}"
          response:
            sync:
              invocation_id: "{{ response.payload.message_uuid }}"
              value: "{{ response.statusCode }}"
              unmapped_values_status: error
              success:
                values:
                  - "200"
                  - "201"
                  - "202"
              error:
                details: "{{ response.payload.error.details }}"
            async:
              invocation_id: "{{ response.payload.message_uuid }}"
              value: "{{ response.payload.status }}"
              unmapped_values_status: error
              status:
                success:
                  values:
                    - delivered
                info:
                  values:
                    - submitted
                error:
                  values:
                    - rejected
                    - undeliverable
                  details: "{{ response.payload.error.details }}"
        timeout_seconds: 5

    ActionSendMessengerRequestExample:
      value:
        name: vg-send-messenger
        description: Send messenger message using Vonage messaging APIs
        command:
          type: http-api-invoke
          method: post
          response:
            success:
              codes:
                - "202"
            error:
              code: "{{ response.payload.statusCode }}"
              details: "{{ response.payload.error.details }}"
            invocation_id: "{{ response.payload.message_uuid }}"
          url: https://api.nexmo.com/v1/messages
          async:
            status:
              info:
                values:
                  - submitted
              error:
                values:
                  - rejected
                  - undeliverable
                details: "{{ event.data.error.detail }}"
              value: "{{ event.data.status }}"
              success:
                values:
                  - delivered
            invocation_id: "{{ event.data.message_uuid }}"
          headers:
            - name: Content-Type
              value: application/json
            - name: Authorization
              value: Bearer {{ parameters.vonage-jwt-token }}
          payload:
            to: "{{ parameters.to }}"
            from: "{{ parameters.from }}"
            text: "{{ parameters.message }}"
            channel: messenger
            message_type: text
        parameters:
          - type: string
            required: true
            name: from
          - type: string
            required: true
            name: to
          - type: string
            required: true
            name: message
          - type: secret
            required: true
            name: vonage-jwt-token
            default: vng-messaging-api

    ActionAddListItemRequestExample:
      value:
        name: add-list-item
        description: Add list item
        parameters:
          - type: string
            required: true
            name: listId
          - type: string
            required: true
            name: itemAttribute
          - type: string
            required: true
            name: attributeValue
          - type: secret
            required: true
            name: vonage-jwt-token
            default: vng-bulk-api
        command:
          type: http-api-invoke
          url: https://api-eu.vonage.com/v0.1/bulk/lists/{{parameters.listId}}/items
          method: post
          headers:
            - name: Content-Type
              value: application/json
            - name: Authorization
              value: Bearer {{ parameters.vonage-jwt-token }}
          payload:
            data:
              "{{ parameters.itemAttribute }}": "{{ parameters.attributeValue }}"
          response:
            sync:
              value: "{{ response.statusCode }}"
              success:
                values:
                  - "200"

    ActionSendSMSResponseExample:
      value:
        name: vg-send-sms
        description: Send text message using Vonage messaging APIs
        parameters:
          - type: string
            required: true
            name: fromNumber
          - type: string
            required: true
            name: toNumber
          - type: string
            required: true
            name: message
          - type: secret
            required: true
            name: vonage-jwt-token
            default: vng-prd-messaging-api
        command:
          type: http-api-invoke
          url: https://api.nexmo.com/v1/messages
          method: post
          headers:
            - name: Content-Type
              value: application/json
            - name: Authorization
              value: Bearer {{ parameters.vonage-jwt-token }}
          payload:
            to: "{{ parameters.toNumber }}"
            message_type: text
            from: "{{ parameters.fromNumber }}"
            channel: sms
            text: "{{ parameters.message }}"
          response:
            sync:
              invocation_id: "{{ response.payload.message_uuid }}"
              value: "{{ response.statusCode }}"
              unmapped_values_status: error
              success:
                values:
                  - "200"
                  - "201"
                  - "202"
              error:
                details: "{{ response.payload.error.details }}"
            async:
              invocation_id: "{{ response.payload.message_uuid }}"
              value: "{{ response.payload.status }}"
              unmapped_values_status: error
              status:
                success:
                  values:
                    - delivered
                info:
                  values:
                    - submitted
                error:
                  values:
                    - rejected
                    - undeliverable
                  details: "{{ response.payload.error.details }}"
        timeout_seconds: 5
        id: 99ea10e0-1f14-4f55-b976-3c88ea8ec4cd
        created_at: "2022-06-23T17:45:31.782Z"
        updated_at: "2022-06-23T17:45:31.782Z"

    JobSegmentationRequestExample:
      value:
        name: send sms with optional end-user response
        tags:
          - marketing
          - uk
        definition:
          type: segmentation-job
          recipients:
            include:
              - id: c6a4704e-2ddd-47b7-b79c-7df38feafb3f
                type: list
            exclude:
              - id: fba7c209-ebb9-4b14-8acb-09a803d4f0a0
                type: list
          segmentations:
            - condition:
                expression: item.salary == 1000 || ['UK', 'USA'].includes(item.country)
              action_call:
                action_ref:
                  id: 466ce4a4-9cec-40c0-83ab-c3fa64e48b6f
                  type: action
                parameters:
                  - name: fromNumber
                    value: "441632960947"
                  - name: toNumber
                    value: "{{ item.number }}"
                  - name: message
                    value:
                      Dear {{ item.firstName }}, {{ item.lastName }} :)\n This's our 1st
                      SMS communication from Vonage campaign.\nReply back with STOP if you want
                      to stop receiving our messages
              name: text vip customers
              description: text UK and USA vip customers
              recipient:
                correlation_id: "{{item.number}}"
          events_handler:
            matching_strategy: match-first
            matchers:
              - condition:
                  expression: event.text?.toLowerCase().includes('stop')
                action_call:
                  action_ref:
                    type: action
                    id: bd795581-9a93-48b0-a4bc-3b7509bf6e4d
                  parameters:
                    - name: listId
                      value: fba7c209-ebb9-4b14-8acb-09a803d4f0a0
                    - name: number
                      value: "{{ event.data.from }}"
                name: opt-out
                description: unsubscribe
                recipient:
                  correlation_id: "{{ event.data.from }}"

    JobResponseExample:
      value:
        name: send sms with optional end-user response
        tags:
          - marketing
          - uk
        definition:
          type: segmentation-job
          recipients:
            include:
              - id: c6a4704e-2ddd-47b7-b79c-7df38feafb3f
                type: list
            exclude:
              - id: fba7c209-ebb9-4b14-8acb-09a803d4f0a0
                type: list
          segmentations:
            - name: text vip customers
              description: text UK and USA vip customers
              condition:
                expression: item.salary == 1000 || ['UK', 'USA'].includes(item.country)
              action_call:
                action_ref:
                  id: 466ce4a4-9cec-40c0-83ab-c3fa64e48b6f
                  type: action
                parameters:
                  - name: fromNumber
                    value: "447418365541"
                  - name: toNumber
                    value: "{{ item.number }}"
                  - name: message
                    value:
                      Dear {{ item.firstName }}, {{ item.lastName }} :)\n This's our 1st
                      SMS communication from Vonage campaign.\nReply back with STOP if you want
                      to stop receiving our messages
              recipient:
                correlation_id: "{{item.number}}"
          events_handler:
            matching_strategy: match-first
            matchers:
              - condition:
                  expression: event.text?.toLowerCase().includes('stop')
                action_call:
                  action_ref:
                    type: action
                    id: bd795581-9a93-48b0-a4bc-3b7509bf6e4d
                  parameters:
                    - name: listId
                      value: fba7c209-ebb9-4b14-8acb-09a803d4f0a0
                    - name: number
                      value: "{{ event.data.from }}"
                name: opt-out
                description: unsubscribe
                recipient:
                  correlation_id: "{{ event.data.from }}"
        id: e721113d-0948-4edb-b4af-e3f0578d708c
        created_at: "2022-06-24T07:49:33.748Z"
        updated_at: "2022-06-24T07:49:33.748Z"

    ActionCallEventMessagingExample:
      value:
        id: 9a8afd25-b6cc-4067-982f-5ff87b01973f
        type: action-call-info
        job_id: c5bd28ff-a738-4d36-afe0-d8cf5a0637f2
        src_ctx: text vip customers
        action_id: 963e715b-9083-4656-a131-10316d788b25
        data:
          to: "16502907207"
          from: "12012857888"
          usage:
            price: "0.0062"
            currency: EUR
          status: submitted
          channel: sms
          timestamp: "2022-09-11T14:39:35Z"
          message_uuid: 4444e319-2652-4fbe-acd0-5ce2f7552c3b
        run_id: 0af4f761-3399-46f1-b742-769d23dd860f
        recipient_id: "15053939008"
        invocation_id: 4444e319-2652-4fbe-acd0-5ce2f7552c3b
        occurred_at: "2022-09-11T14:39:36.110Z"
