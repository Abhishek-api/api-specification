openapi: 3.0.3
info:
  title: Vonage Bulk API
  description: REST APIs for VCP Bulk Jobs & Lists
  version: 0.1.0
  contact:
    name: Nexmo.com
    email: devrel@nexmo.com
    url: "https://developer.nexmo.com/"
    x-twitter: Nexmo
  termsOfService: "https://www.nexmo.com/terms-of-use"
  license:
    name: The MIT License (MIT)
    url: "https://opensource.org/licenses/MIT"
  x-logo:
    url: "https://twitter.com/Nexmo/profile_image?size=original"
  x-apiClientRegistration: "https://dashboard.nexmo.com/sign-up"
  x-label: Alpha
tags:
  - name: lists
  - name: items
  - name: actions
    description: APIs relating to working with actions
  - name: jobs
  - name: runs
  - name: events
  - name: webhooks
servers:
  - url: https://api-eu.vonage.com/v0.1/bulk
    description: prod env in EU geo
security:
  - bearerAuth: [ ]
paths:
  /lists:
    get:
      operationId: listsFindAll
      summary: Find all lists
      parameters:
        - $ref: "common/hal_structures.yml#/components/parameters/Page"
        - $ref: "common/hal_structures.yml#/components/parameters/PageSize"
      responses:
        "200":
          $ref: "#/components/responses/ListsPagedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
      tags:
        - lists
    post:
      operationId: listsCreate
      summary: Create list
      parameters: [ ]
      requestBody:
        $ref: "#/components/requestBodies/ListRequest"
      responses:
        "201":
          $ref: "#/components/responses/ListResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "409":
          $ref: "#/components/responses/ErrorConflict"
        "422":
          $ref: "#/components/responses/ErrorResourceLimitReached"
      tags:
        - lists
  /lists/{list_id}:
    parameters:
      - $ref: "#/components/parameters/ListId"
    get:
      operationId: listsGet
      summary: Get list by id
      responses:
        "200":
          $ref: "#/components/responses/ListResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - lists
    put:
      operationId: listsUpdate
      summary: Update list
      requestBody:
        $ref: "#/components/requestBodies/ListRequest"
      responses:
        "200":
          $ref: "#/components/responses/ListResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
        "409":
          $ref: "#/components/responses/ErrorConflict"
      tags:
        - lists
    delete:
      operationId: listsDelete
      summary: Delete list
      responses:
        "200":
          $ref: "#/components/responses/ListResponse"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - lists
  /lists/{list_id}/clear:
    parameters:
      - $ref: "#/components/parameters/ListId"
    post:
      operationId: listsClear
      summary: Clear list - delete all the list items. This is an async operation which is performed in the background.
      responses:
        "202":
          $ref: "#/components/responses/AcceptedResponse"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - lists
  /lists/{list_id}/fetch:
    parameters:
      - $ref: "#/components/parameters/ListId"
    post:
      operationId: listsFetch
      summary: Fetch list - delete all items and sync from the datasource. Fetch is invalid for manual list.  This is an async operation which is performed in the background.
      responses:
        "202":
          $ref: "#/components/responses/AcceptedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - lists
  /lists/{list_id}/items:
    parameters:
      - $ref: "#/components/parameters/ListId"
    get:
      operationId: itemsFindAll
      summary: Find all list items
      parameters:
        - $ref: "common/hal_structures.yml#/components/parameters/Page"
        - $ref: "common/hal_structures.yml#/components/parameters/PageSize"
      responses:
        "200":
          $ref: "#/components/responses/ItemsPagedResponse"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - items
    post:
      operationId: itemsCreate
      summary: Create list item
      requestBody:
        $ref: "#/components/requestBodies/ItemRequest"
      responses:
        "201":
          $ref: "#/components/responses/ItemResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
        "422":
          $ref: "#/components/responses/ErrorResourceLimitReached"
      tags:
        - items
  /lists/{list_id}/items/download:
    parameters:
      - $ref: "#/components/parameters/ListId"
    get:
      operationId: itemsDownload
      summary: Download list items as a CSV file format
      responses:
        "200":
          $ref: "#/components/responses/ItemsDownloadResponse"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - items
  /lists/{list_id}/items/{item_id}:
    parameters:
      - $ref: "#/components/parameters/ListId"
      - $ref: "#/components/parameters/ItemId"
    get:
      operationId: itemsGet
      summary: Get list item by id
      responses:
        "200":
          $ref: "#/components/responses/ItemResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - items
    put:
      operationId: itemsUpdate
      summary: Update list item
      requestBody:
        $ref: "#/components/requestBodies/ItemRequest"
      responses:
        "200":
          $ref: "#/components/responses/ItemResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - items
    delete:
      operationId: itemsDelete
      summary: Delete list item
      responses:
        "200":
          $ref: "#/components/responses/ItemResponse"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - items
  /lists/{list_id}/items/import:
    parameters:
      - $ref: "#/components/parameters/ListId"
    post:
      operationId: itemsImport
      summary: Import list items from a CSV file
      requestBody:
        $ref: "#/components/requestBodies/ItemImportRequest"
      responses:
        "200":
          $ref: "#/components/responses/ItemsImportResponse"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
        "422":
          $ref: "#/components/responses/ErrorResourceLimitReached"
      tags:
        - items
  /actions:
    get:
      operationId: actionsFindAll
      summary: Find all actions
      parameters:
        - $ref: "common/hal_structures.yml#/components/parameters/Page"
        - $ref: "common/hal_structures.yml#/components/parameters/PageSize"
      responses:
        "200":
          $ref: "#/components/responses/ActionsPagedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
      tags:
        - actions
    post:
      operationId: actionsCreate
      summary: Create action
      requestBody:
        $ref: "#/components/requestBodies/ActionRequest"
      responses:
        "201":
          $ref: "#/components/responses/ActionResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "409":
          $ref: "#/components/responses/ErrorConflict"
        "422":
          $ref: "#/components/responses/ErrorResourceLimitReached"
      tags:
        - actions
  /actions/{action_id}:
    parameters:
      - $ref: "#/components/parameters/ActionId"
    get:
      operationId: actionsGet
      summary: Get action by id
      responses:
        "200":
          $ref: "#/components/responses/ActionResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - actions
    put:
      operationId: actionsUpdate
      summary: Update action by id
      requestBody:
        $ref: "#/components/requestBodies/ActionRequest"
      responses:
        "200":
          $ref: "#/components/responses/ActionResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - actions
    delete:
      operationId: actionsDelete
      summary: Delete action by id
      responses:
        "200":
          $ref: "#/components/responses/ActionResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - actions
  /jobs:
    get:
      operationId: jobsFindAll
      summary: Find all jobs
      parameters:
        - $ref: "common/hal_structures.yml#/components/parameters/Page"
        - $ref: "common/hal_structures.yml#/components/parameters/PageSize"
      responses:
        "200":
          $ref: "#/components/responses/JobsPagedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
      tags:
        - jobs
    post:
      operationId: jobsCreate
      summary: Create job
      requestBody:
        $ref: "#/components/requestBodies/JobRequest"
      responses:
        "201":
          $ref: "#/components/responses/JobResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "409":
          $ref: "#/components/responses/ErrorConflict"
        "422":
          $ref: "#/components/responses/ErrorResourceLimitReached"
      tags:
        - jobs
  /jobs/{job_id}:
    parameters:
      - $ref: "#/components/parameters/JobId"
    get:
      operationId: jobsGet
      summary: Get job by id
      responses:
        "200":
          $ref: "#/components/responses/JobResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - jobs
    put:
      operationId: jobsUpdate
      summary: Update job by id
      requestBody:
        $ref: "#/components/requestBodies/JobRequest"
      responses:
        "200":
          $ref: "#/components/responses/JobResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - jobs
    delete:
      operationId: jobsDelete
      summary: Delete job
      responses:
        "200":
          $ref: "#/components/responses/JobResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - jobs
  /events:
    get:
      operationId: eventsFindAll
      summary: Find all events
      parameters:
        - $ref: "common/hal_structures.yml#/components/parameters/Page"
        - $ref: "common/hal_structures.yml#/components/parameters/PageSize"
      responses:
        "200":
          $ref: "#/components/responses/EventsPagedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
      tags:
        - events
  /runs:
    get:
      operationId: runsFindAll
      summary: Find all runs
      parameters:
        - $ref: "common/hal_structures.yml#/components/parameters/Page"
        - $ref: "common/hal_structures.yml#/components/parameters/PageSize"
      responses:
        "200":
          $ref: "#/components/responses/RunsPagedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
      tags:
        - runs
    post:
      operationId: runsSchedule
      summary: Start job.  This is an async operation which is performed in the background.
      requestBody:
        $ref: "#/components/requestBodies/RunRequest"
      responses:
        "202":
          $ref: "#/components/responses/AcceptedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
        "422":
          $ref: "#/components/responses/ErrorResourceLimitReached"
      tags:
        - runs
  /runs/{run_id}:
    parameters:
      - $ref: "#/components/parameters/RunId"
    get:
      operationId: runsGet
      summary: Get run by id
      responses:
        "200":
          $ref: "#/components/responses/RunResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - runs
  /runs/{run_id}/events:
    parameters:
      - $ref: "#/components/parameters/RunId"
    get:
      operationId: runsEvents
      summary: Get job run events
      parameters:
        - $ref: "common/hal_structures.yml#/components/parameters/Page"
        - $ref: "common/hal_structures.yml#/components/parameters/PageSize"
      responses:
        "200":
          $ref: "#/components/responses/EventsPagedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - runs
  /runs/{run_id}/summary:
    parameters:
      - $ref: "#/components/parameters/RunId"
    get:
      operationId: runsSummary
      summary: Get run statistics overview
      responses:
        "200":
          $ref: "#/components/responses/RunSummaryResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - runs
  /runs/{run_id}/cancel:
    parameters:
      - $ref: "#/components/parameters/RunId"
    post:
      operationId: runsCancel
      summary: Initiate run cancellation. This is an async operation which is performed in the background.
      responses:
        "202":
          $ref: "#/components/responses/AcceptedResponse"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "common/common_errors.yml#/components/responses/JWTExpiredError"
        "404":
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
      tags:
        - runs
  # todo: revised webhook endpoints - can we have a single endpoint we could customize?
  /webhooks/actions/status:
    post:
      operationId: webhooksActionStatus
      summary: Webhook endpoint to handle action call status for async actions
      responses:
        # todo: what should be the response code for webhook? Maybe accepted?
        "200":
          description: "Empty response"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
      tags:
        - webhooks
      security:
        - { }
  /webhooks/recipients/responses:
    post:
      operationId: webhooksRecipientResponse
      summary: Webhook endpoint to handle recipient responses
      responses:
        "200":
          description: "Empty response"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
      tags:
        - webhooks
      security:
        - { }
components:
  securitySchemes:
    bearerAuth:
      scheme: bearer
      bearerFormat: JWT
      type: http

  parameters:
    ListId:
      name: list_id
      in: path
      description: Unique identifier for a list
      required: true
      schema:
        $ref: "#/components/schemas/ListId"

    ItemId:
      name: item_id
      in: path
      description: Unique identifier for a list item
      required: true
      schema:
        $ref: "#/components/schemas/ItemId"

    ActionId:
      name: action_id
      in: path
      description: Unique identifier for an action
      required: true
      schema:
        $ref: "#/components/schemas/ActionId"

    JobId:
      name: job_id
      in: path
      description: Unique identifier for a job
      required: true
      schema:
        $ref: "#/components/schemas/JobId"

    RunId:
      name: run_id
      in: path
      description: Unique identifier for a run
      required: true
      schema:
        $ref: "#/components/schemas/RunId"

  requestBodies:
    ListRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ListEditableFields"
          examples:
            manual:
              $ref: "#/components/examples/ListManualExample"
            salesforce:
              $ref: "#/components/examples/ListSalesforceExample"

    ItemRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ItemEditableFields"
          examples:
            simple:
              $ref: "#/components/examples/ItemRequestExample"

    ItemImportRequest:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                description: csv file of list items to import
                type: string
                format: binary

    ActionRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ActionEditableFields"
          examples:
            simple:
              $ref: "#/components/examples/ActionSendSMSRequestExample"

    JobRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/JobEditableFields"
          examples:
            simple:
              $ref: "#/components/examples/JobSegmentationRequestExample"

    RunRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RunEditableFields"
          examples:
            simple:
              $ref: "#/components/examples/RunRequestExample"

  responses:
    AcceptedResponse:
      # todo: what should we return in accepted response? It currently return no content (then why not use http code 204?). I added application/json to avoid the doc warning.
      description: Request accepted and is processed asynchronously on the server
      content:
        application/json:
          schema:
            type: string
            example: ""

    ErrorBadRequest:
      description: Invalid request parameter or body
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorBase"

    ErrorConflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorBase"

    ErrorResourceLimitReached:
      description: Resource limit reached / exceeded
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorBase"
          example:
            code: 422
            path: "/v0.1/bulk/lists"
            method: POST
            message: Resource limit has been reached
            timestamp: '2022-08-17T12:26:17.904Z'
            details:
              - resource: lists
                limit:
                  name: total
                  value: 10

    ListResponse:
      description: "List response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ListDto"
          examples:
            manual:
              $ref: "#/components/examples/ListManualResponseExample"
            salesforce:
              $ref: "#/components/examples/ListSalesforceResponseExample"

    ListsPagedResponse:
      description: Lists paged response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PageResponseDto"
              - properties:
                  _embedded:
                    type: object
                    readOnly: true
                    properties:
                      lists:
                        type: array
                        readOnly: true
                        items:
                          $ref: "#/components/schemas/ListDto"
          example:
            page: 1
            page_size: 100
            total_items: 2
            total_pages: 1
            _links:
              self:
                href: https://api-eu.vonage.com/v0.1/bulk/lists?page_size=100&page=1
              prev:
                href: https://api-eu.vonage.com/v0.1/bulk/lists?page_size=100&page=1
              next:
                href: https://api-eu.vonage.com/v0.1/bulk/lists?page_size=100&page=1
              first:
                href: https://api-eu.vonage.com/v0.1/bulk/lists?page_size=100&page=1
            _embedded:
              lists:
                # todo - can we reuse examples? Based on doc and tickets no
                # - $ref: "#/components/examples/ListManualResponse/value"
                - id: af8a84b6-c712-4252-ac8d-6e28ac9317ce
                  name: Recipients for demo
                  description: List of recipients for demo
                  type: manual
                  tags:
                    - vip
                  labels:
                    - name: firstName
                    - name: lastName
                      key: false
                    - name: number
                      alias: phoneNumber
                      key: true
                  items_count: 1000
                  sync_status: configured
                  created_at: "2022-06-23T13:13:16.491Z"
                  updated_at: "2022-06-23T13:13:16.491Z"
                #                - $ref: "#/components/examples/ListSalesforceResponse/value"
                - id: 4cb98f71-a879-49f7-b5cf-2314353eb52c
                  name: Salesforce contact
                  description: Salesforce contacts for campaign
                  tags:
                    - salesforce
                  labels:
                    - key: false
                      name: Id
                    - key: false
                      name: Phone
                    - key: false
                      name: Email
                  datasource:
                    type: salesforce
                    integration_id: salesforce
                    soql: SELECT Id, LastName, FirstName, Phone, Email, OtherCountry FROM Contact
                  type: salesforce
                  items_count: 25000
                  sync_status: completed
                  content_synced: true
                  created_at: '2022-08-02T13:22:04.267Z'
                  updated_at: '2022-08-02T13:22:04.267Z'

    ItemResponse:
      description: Item response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ItemDto"
          examples:
            simple:
              $ref: "#/components/examples/ItemsResponseExample"

    ItemsPagedResponse:
      description: Items paged response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PageResponseDto"
              - properties:
                  _embedded:
                    type: object
                    readOnly: true
                    properties:
                      items:
                        type: array
                        readOnly: true
                        items:
                          $ref: "#/components/schemas/ItemDto"
          example:
            total_items: 2
            page: 1
            page_size: 100
            total_pages: 1
            _links:
              self:
                href: https://api-eu.vonage.com/v0.1/bulk/lists/060b9c33-6c81-4fe4-9621-b10c0a4c06f3/items/?page_size=100&page=1
              prev:
                href: https://api-eu.vonage.com/v0.1/bulk/lists/060b9c33-6c81-4fe4-9621-b10c0a4c06f3/items/?page_size=100&page=1
              next:
                href: https://api-eu.vonage.com/v0.1/bulk/lists/060b9c33-6c81-4fe4-9621-b10c0a4c06f3/items/?page_size=100&page=1
              first:
                href: https://api-eu.vonage.com/v0.1/bulk/lists/060b9c33-6c81-4fe4-9621-b10c0a4c06f3/items/?page_size=100&page=1
            _embedded:
              items:
                # - $ref: "#/components/examples/ListItemResponse"
                - id: 6e26d247-e074-4f68-b72b-dd92aa02c7e0
                  created_at: '2022-08-03T08:54:21.122Z'
                  updated_at: '2022-08-03T08:54:21.122Z'
                  list_id: 060b9c33-6c81-4fe4-9621-b10c0a4c06f3
                  data:
                    Id: '0038d00000B22zbAAB'
                    Email: info@salesforce.com
                    Phone: "(415) 555-1212"
                    LastName: Minor
                    FirstName: Geoff
                    OtherCountry: Canada
                - id: f7c029ad-93c3-469c-9267-73c3c6864161
                  created_at: '2022-08-03T08:54:21.122Z'
                  updated_at: '2022-08-03T08:54:21.122Z'
                  list_id: 060b9c33-6c81-4fe4-9621-b10c0a4c06f3
                  data:
                    Id: '0038d00000B22zcAAB'
                    Email: info@salesforce.com
                    Phone: "(415) 555-1212"
                    LastName: White
                    FirstName: Carole
                    OtherCountry:

    ItemsDownloadResponse:
      description: csv file of list items (stream response)
      headers:
        transfer-encoding:
          schema:
            enum:
              - chunked
            type: string
            example: chunked
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary

    ItemsImportResponse:
      description: Importing list item from file response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiChangedDto"
          examples:
            simple:
              $ref: "#/components/examples/ItemsImportExample"

    ActionResponse:
      description: Action response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ActionDto"
          examples:
            simple:
              $ref: "#/components/examples/ActionSendSMSResponseExample"

    ActionsPagedResponse:
      description: Actions paged response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PageResponseDto"
              - properties:
                  _embedded:
                    type: object
                    readOnly: true
                    properties:
                      actions:
                        type: array
                        readOnly: true
                        items:
                          $ref: "#/components/schemas/ActionDto"
          example:
            total_items: 1
            page: 1
            page_size: 100
            total_pages: 1
            _links:
              self:
                href: https://api-eu.vonage.com/v0.1/bulk/actions?page_size=100&page=1
              prev:
                href: https://api-eu.vonage.com/v0.1/bulk/actions?page_size=100&page=1
              next:
                href: https://api-eu.vonage.com/v0.1/bulk/actions?page_size=100&page=1
              first:
                href: https://api-eu.vonage.com/v0.1/bulk/actions?page_size=100&page=1
            _embedded:
              actions:
                # - $ref: "#/components/examples/ActionSendSMSResponse"
                - name: vg-send-sms
                  description: Send text message using Vonage messaging APIs
                  parameters:
                    - type: string
                      required: true
                      name: fromNumber
                    - type: string
                      required: true
                      name: toNumber
                    - type: string
                      required: true
                      name: message
                    - type: secret
                      required: true
                      name: vonage-jwt-token
                      default: vng-prd-messaging-api
                  command:
                    type: http-api-invoke
                    url: https://api.nexmo.com/v1/messages
                    method: post
                    headers:
                      - name: Content-Type
                        value: application/json
                      - name: Authorization
                        value: Bearer {{ parameters.vonage-jwt-token }}
                    payload:
                      to: "{{ parameters.toNumber }}"
                      message_type: text
                      from: "{{ parameters.fromNumber }}"
                      channel: sms
                      text: "{{ parameters.message }}"
                    response:
                      success:
                        codes:
                          - "202"
                      invocation_id: "{{response.payload.message_uuid}}"
                      error:
                        code: "{{response.payload.statusCode}}"
                        details: "{{response.payload.error.details}}"
                    async:
                      invocation_id: "{{ event.message_uuid }}"
                      status:
                        value: "{{event.status}}"
                        success:
                          values:
                            - delivered
                        error:
                          values:
                            - rejected
                            - undeliverable
                          details: "{{event.error.details}}"
                        info:
                          values:
                            - submitted
                  timeout_seconds: 5
                  id: 99ea10e0-1f14-4f55-b976-3c88ea8ec4cd
                  created_at: "2022-06-23T17:45:31.782Z"
                  updated_at: "2022-06-23T17:45:31.782Z"

    JobResponse:
      description: Job response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/JobDto"
          examples:
            simple:
              $ref: "#/components/examples/JobResponseExample"

    JobsPagedResponse:
      description: Jobs paged response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PageResponseDto"
              - properties:
                  _embedded:
                    type: object
                    readOnly: true
                    properties:
                      jobs:
                        type: array
                        readOnly: true
                        items:
                          $ref: "#/components/schemas/JobDto"
          example:
            total_items: 1
            page: 1
            page_size: 100
            total_pages: 1
            _links:
              self:
                href: https://api-eu.vonage.com/v0.1/bulk/jobs?page_size=2&page=1
              prev:
                href: https://api-eu.vonage.com/v0.1/bulk/jobs?page_size=2&page=1
              next:
                href: https://api-eu.vonage.com/v0.1/bulk/jobs?page_size=2&page=1
              first:
                href: https://api-eu.vonage.com/v0.1/bulk/jobs?page_size=2&page=1
            _embedded:
              jobs:
                - name: send sms with optional end-user response
                  tags:
                    - marketing
                    - uk
                  definition:
                    type: segmentation-job
                    recipients:
                      include:
                        - id: c6a4704e-2ddd-47b7-b79c-7df38feafb3f
                          type: list
                      exclude:
                        - id: fba7c209-ebb9-4b14-8acb-09a803d4f0a0
                          type: list
                    segmentations:
                      - condition:
                          expression: item.salary == 1000 || ['UK', 'USA'].includes(item.country)
                        action_call:
                          action_ref:
                            id: 466ce4a4-9cec-40c0-83ab-c3fa64e48b6f
                            type: action
                          parameters:
                            - name: fromNumber
                              value: "447418365541"
                            - name: toNumber
                              value: "{{ item.number }}"
                            - name: message
                              value: "{{ template.message }}"
                        name: text vip customers
                        description: text UK and USA vip customers
                        template:
                          type: text
                          message:
                            Dear {{ item.firstName }}, {{ item.lastName }} :)\n This's our 1st
                            SMS communication from Vonage campaign.\nReply back with STOP if you want
                            to stop receiving our messages
                          encoding: utf8
                        recipient:
                          correlation_id: "{{item.number}}"
                    events_handler:
                      matching_strategy: match-first
                      matchers:
                        - condition:
                            expression: event.text?.toLowerCase().includes('stop')
                          action_call:
                            action_ref:
                              type: action
                              id: bd795581-9a93-48b0-a4bc-3b7509bf6e4d
                            parameters:
                              - name: listId
                                value: fba7c209-ebb9-4b14-8acb-09a803d4f0a0
                              - name: number
                                value: "{{event.from}}"
                          name: opt-out
                          description: unsubscribe
                          recipient:
                            correlation_id: "{{event.from}}"
                  id: e721113d-0948-4edb-b4af-e3f0578d708c
                  created_at: "2022-06-24T07:49:33.748Z"
                  updated_at: "2022-06-24T07:49:33.748Z"

    RunResponse:
      description: Run response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RunDto"
          examples:
            simple:
              $ref: "#/components/examples/RunResponseExample"

    RunsPagedResponse:
      description: Runs paged response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PageResponseDto"
              - properties:
                  _embedded:
                    type: object
                    readOnly: true
                    properties:
                      runs:
                        type: array
                        readOnly: true
                        items:
                          $ref: "#/components/schemas/RunDto"
          example:
            total_items: 1
            page: 1
            page_size: 100
            total_pages: 1
            _links:
              self:
                href: https://api-eu.vonage.com/v0.1/bulk/runs?page_size=100&page=1
              prev:
                href: https://api-eu.vonage.com/v0.1/bulk/runs?page_size=100&page=1
              next:
                href: https://api-eu.vonage.com/v0.1/bulk/runs?page_size=100&page=1
              first:
                href: https://api-eu.vonage.com/v0.1/bulk/runs?page_size=100&page=1
            _embedded:
              runs:
                # - $ref: "#/components/examples/SegmentationRunResponse"
                - name: E2E Demo run
                  job_id: e721113d-0948-4edb-b4af-e3f0578d708c
                  status: scheduled
                  start_at: "2022-06-24T04:06:36.000Z"
                  end_at: "2022-06-24T08:57:55.917Z"
                  id: 51aca838-2cf6-4100-b0d2-e74ac0e95c88
                  created_at: "2022-06-24T07:57:56.301Z"
                  updated_at: "2022-06-24T07:57:56.301Z"


    RunSummaryResponse:
      description: Run summary response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RunSummary"

    EventsPagedResponse:
      description: Events paged response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PageResponseDto"
              - properties:
                  _embedded:
                    type: object
                    readOnly: true
                    properties:
                      events:
                        type: array
                        readOnly: true
                        items:
                          oneOf:
                            - $ref: "#/components/schemas/ActionCallSucceededEvent"
                            - $ref: "#/components/schemas/ActionCallFailedEvent"
                            - $ref: "#/components/schemas/ActionCallInfoEvent"
                            - $ref: "#/components/schemas/RecipientResponseEvent"
                            - $ref: "#/components/schemas/RunItemSkippedEvent"
                            - $ref: "#/components/schemas/RunItemFailedEvent"
          example:
            total_items: 1
            page: 1
            page_size: 100
            total_pages: 1
            _links:
              self:
                href: https://api-eu.vonage.com/v0.1/bulk/runs/7d0d4e5f-6453-4c63-87cf-f95b04377324/events?page_size=100&page=1
              prev:
                href: https://api-eu.vonage.com/v0.1/bulk/runs/7d0d4e5f-6453-4c63-87cf-f95b04377324/events?page_size=100&page=1
              next:
                href: https://api-eu.vonage.com/v0.1/bulk/runs/7d0d4e5f-6453-4c63-87cf-f95b04377324/events?page_size=100&page=1
              first:
                href: https://api-eu.vonage.com/v0.1/bulk/runs/7d0d4e5f-6453-4c63-87cf-f95b04377324/events?page_size=100&page=1
            _embedded:
              events:
                - occurred_at: '2022-08-07T13:18:21.970Z'
                  event_type: action-call-succeeded
                  id: e8e1eb4d-61e0-4099-8fa7-c96f1c0764ba
                  job_id: c68e871a-c239-474d-a905-7b95f4563b7e
                  src_ctx: et-e4ab4b75-9e7c-4f26-9328-394a5b842648
                  action_id: 26c5bbe2-113e-4201-bd93-f69e0a03d17f
                  event_data:
                    url: https://postman-echo.com/post
                    args: {}
                    data:
                      from: ''
                    form: {}
                    json:
                      from: ''
                    files: {}
                    headers:
                      host: postman-echo.com
                      user-agent: got (https://github.com/sindresorhus/got)
                      content-type: application/json
                      content-length: '11'
                      accept-encoding: gzip, deflate, br
                      x-amzn-trace-id: Root=1-62efbb9e-53636b7b794accb87a3d662f
                      x-forwarded-port: '443'
                      x-nexmo-trace-id: 8a6fed94-7296-4a39-9c52-348f12b4d61a
                      x-forwarded-proto: https
                  run_id: 7d0d4e5f-6453-4c63-87cf-f95b04377324
                  recipient_id: '14806904549'
                - occurred_at: '2022-08-07T13:18:20.289Z'
                  event_type: recipient-response
                  id: 8c8e9894-81be-4f6e-88d4-046b6c70ff8c
                  job_id: c68e871a-c239-474d-a905-7b95f4563b7e
                  src_ctx: et-e4ab4b75-9e7c-4f26-9328-394a5b842648
                  event_data:
                    from: '15053939008'
                    text: Dima
                  run_id: 7d0d4e5f-6453-4c63-87cf-f95b04377324
                  recipient_id: '15053939008'

  schemas:
    Href:
      type: object
      properties:
        href:
          type: string
          format: url
          example: https://api-eu.vonage.com/v0.1/bulk/lists?page=5&page_size=10
      required:
        - href

    HalLinks:
      type: object
      properties:
        first:
          $ref: "#/components/schemas/Href"
        prev:
          $ref: "#/components/schemas/Href"
        self:
          $ref: "#/components/schemas/Href"
        next:
          $ref: "#/components/schemas/Href"
        # todo: add last to implementation
        last:
          $ref: "#/components/schemas/Href"
      required:
        # todo: fix links required in code - it make no sense to have next or prev if none available
        - first
        - prev
        - self
        - next

    PageResponseDto:
      allOf:
        # todo: use PagedResponse - if we do it currently break the examples
        #  $ref: "common/hal_structures.yml#/components/schemas/PagedResponse"
        - type: object
          properties:
            total_items:
              type: number
              readOnly: true
              example: 10000
            total_pages:
              type: number
              readOnly: true
              example: 50
            page:
              type: number
              readOnly: true
              minimum: 1
              example: 1
            page_size:
              type: number
              readOnly: true
              example: 250
            _links:
              $ref: "#/components/schemas/HalLinks"
            _embedded:
              type: object
              additionalProperties: true
              readOnly: true
          required:
            - total_items
            - total_pages
            - page
            - page_size
            - _links
            - _embedded

    ErrorBase:
      description: default error attributes in vcp-bulk implementation
      allOf:
        # todo: align error response with error spec
#        - $ref: "common/common_errors.yml#/components/responses/DefaultError/content/application~1json/schema"
        - type: object
          properties:
            code:
              description: http status code
              example: 400
            path:
              description: url path to the requested resource
              example: /v0.1/bulk/lists?page=-1&page_size=2
            method:
              description: http method
              example: GET
            message:
              description: additional information on the error or it's root cause
              type: object
              properties:
                status_code:
                  description: http status code
                  example: 400
                error:
                  description: error string
                  type: string
                  example: Bad request
                message:
                  description: list of error description
                  type: array
                  items:
                    type: string
                  example:
                    - "page must not be less than 1"
                    - "name must be longer than or equal to 1 characters"
                    - "name must be a string"

    ApiChangedDto:
#      todo: rename to ApiDataChange
      description: Count of affected data records as a result of the API action
      type: object
      properties:
        inserted:
          type: number
        updated:
          type: number
        deleted:
          type: number

    ListId:
      description: Unique identifier for a list
      type: string
      format: uuid
      example: 4cb98f71-a879-49f7-b5cf-2314353eb52c

    ItemId:
      description: Unique identifier for a list item
      type: string
      format: uuid
      example: 6e26d247-e074-4f68-b72b-dd92aa02c7e0

    ActionId:
      description: Unique identifier for an action
      type: string
      format: uuid
      example: 99ea10e0-1f14-4f55-b976-3c88ea8ec4cd

    JobId:
      description: Unique identifier for a job
      type: string
      format: uuid
      example: e721113d-0948-4edb-b4af-e3f0578d708c

    RunId:
      description: Unique identifier for a run
      type: string
      format: uuid
      example: 51aca838-2cf6-4100-b0d2-e74ac0e95c88

    InvocationId:
      description: Identifier of an action invocation
      type: string
      format: uuid
      example: "{{ event.reqId }}"

    RecipientId:
      description: String identifier of a recipient, for example his email, phone number etc
      type: string
      example: 12025550135

    BulkBase:
      description: Common attributes of any Bulk API resource
      type: object
      properties:
        id:
          type: string
          readOnly: true
          format: uuid
          example: 29192c4a-4058-49da-86c2-3e349d1065b7
        created_at:
          format: date-time
          type: string
          readOnly: true
          example: "2022-06-19T17:59:28.085Z"
        updated_at:
          format: date-time
          type: string
          readOnly: true
          example: "2022-06-19T17:59:28.085Z"

    ListDatasourceBase:
      type: object
      properties:
        type:
          type: string
          default: salesforce
          enum:
            - salesforce
          example: salesforce
      required:
        - type

    SalesforceDatasource:
      allOf:
        - $ref: "#/components/schemas/ListDatasourceBase"
        - type: object
          properties:
            type:
              type: string
              default: salesforce
              enum:
                - salesforce
              example: salesforce
            integration_id:
              type: string
              example: salesforce_credentials
            soql:
              type: string
              example: select Id, LastName, FirstName, Phone, Email FROM Contact
          required:
            - type
            - integration_id
            - soql

    ListLabel:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
          example: phone_number
        alias:
          type: string
          maxLength: 50
          example: phone
        key:
          type: boolean
          default: false
      required:
        - name

    NameAndDescription:
      description: set the name and description attributes limits for any bulk resource
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          example: my name
        description:
          type: string
          maxLength: 1024
          example: my description
      required:
        - name

    Tags:
      description: custom string assigned with a resource
      type: array
      minItems: 0
      maxItems: 10
      items:
        type: string
        # todo: why min/max length fails rendering?
        #        minLength: 1
        #        maxLength: 15

    ListEditableFields:
      description: Fields that are editable for a list
      allOf:
        - $ref: "#/components/schemas/NameAndDescription"
        - type: object
          properties:
            tags:
              $ref: "#/components/schemas/Tags"
            labels:
              minItems: 0
              maxItems: 50
              type: array
              items:
                $ref: "#/components/schemas/ListLabel"
            datasource:
              discriminator:
                propertyName: type
              oneOf:
                - $ref: "#/components/schemas/SalesforceDatasource"

    ListSyncStatus:
      description: sync status and it's details
      type: object
      properties:
        value:
          type: string
          readOnly: true
          enum:
            - configured
            - syncing
            - clearing
            - fetching
            - paused
            - stopped
            - completed
            - failed
          example: configured
        details:
          description: provide details on sync status
          type: string
        dirty:
          description: Indicates if the list content or metadata were modified since last sync.
          type: boolean
        data_modified:
          description: One or more list items were added, removed modified since latest sync.
          type: boolean
        metadata_modified:
          description: List metadata (definition) is modified since latest sync.
          type: boolean

    ListSystemFields:
      description: Fields that are added to a list by the system
      type: object
      properties:
        type:
          type: string
          readOnly: true
          enum:
            - salesforce
            - manual
          example: salesforce
        sync_status:
          $ref: "#/components/schemas/ListSyncStatus"
        items_count:
          type: number
          readOnly: true
          example: 10000

    ListDto:
      description: List resource
      allOf:
        - $ref: "#/components/schemas/BulkBase"
        - $ref: "#/components/schemas/ListEditableFields"
        - $ref: "#/components/schemas/ListSystemFields"

    ItemEditableFields:
      description: Fields that are editable for an item
      type: object
      properties:
        data:
          type: object
          additionalProperties: true
          minProperties: 1
          maxProperties: 20
          example:
            firstName: Adrianna
            lastName: Renner
            number: 715-268-2905
      required:
        - data

    ItemSystemFields:
      description: Fields that are added to a list item by the system
      type: object
      properties:
        list_id:
          $ref: "#/components/schemas/ListId"

    ItemDto:
      description: Item resource
      allOf:
        - $ref: "#/components/schemas/BulkBase"
        - $ref: "#/components/schemas/ItemEditableFields"
        - $ref: "#/components/schemas/ItemSystemFields"
      required:
        - list_id
        - data

    ActionParameterName:
      type: string
      minLength: 1
      maxLength: 50
      example: from_number

    ActionParameterDefinition:
      type: object
      properties:
        type:
          type: string
          enum:
            - string
            - secret
          default: string
          example: string
        name:
          $ref: "#/components/schemas/ActionParameterName"
        description:
          type: string
          maxLength: 256
        required:
          type: boolean
          default: true
          example: true
        default:
          type: string
      required:
        - name

    ActionParameterValue:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ActionParameterName"
        value:
          type: string
          example: 715-268-2905
      required:
        - name
        - value

    ActionHttpResponseSuccess:
      type: object
      properties:
        codes:
          default:
            - "200"
          type: array
          items:
            type: string
          example:
            - 200
      required:
        - codes

    ActionHttpError:
      type: object
      properties:
        code:
          type: string
        details:
          type: string
          example: failed to run
      required:
        - details

    ActionHttpResponse:
      type: object
      properties:
        invocation_id:
          $ref: "#/components/schemas/InvocationId"
        success:
          $ref: "#/components/schemas/ActionHttpResponseSuccess"
        error:
          $ref: "#/components/schemas/ActionHttpError"

    ActionHttpAsyncStatusValues:
      type: object
      properties:
        values:
          minItems: 1
          maxItems: 10
          example:
            - "202"
          type: array
          items:
            type: string
      required:
        - values

    ActionHttpAsyncErrorStatus:
      type: object
      properties:
        values:
          minItems: 1
          maxItems: 10
          example:
            - "400"
          type: array
          items:
            type: string
        details:
          type: string
          example: "{{ event.error.details }}"
      required:
        - values
        - details

    ActionHttpAsyncStatus:
      type: object
      properties:
        value:
          type: string
          example: "200"
        success:
          example: "200"
          allOf:
            - $ref: "#/components/schemas/ActionHttpAsyncStatusValues"
        error:
          $ref: "#/components/schemas/ActionHttpAsyncErrorStatus"
        info:
          $ref: "#/components/schemas/ActionHttpAsyncStatusValues"
      required:
        - value
        - success

    ActionHttpAsync:
      type: object
      properties:
        invocation_id:
          $ref: "#/components/schemas/InvocationId"
        status:
          example:
            success:
              values:
                - ok
            error:
              values:
                - failed
              details: "{{ event.error.details }}"
            info:
              values:
                - submitted
            value: "{{ event.status }}"
          allOf:
            - $ref: "#/components/schemas/ActionHttpAsyncStatus"
      required:
        - invocation_id
        - status

    HttpApiInvoke:
      type: object
      properties:
        type:
          type: string
          default: http-api-invoke
          enum:
            - http-api-invoke
          example: http-api-invoke
        url:
          type: string
          example: https://api.nexmo.com/v1/messages
        method:
          type: string
          default: post
          example: post
        headers:
          type: array
          items:
            $ref: "#/components/schemas/ActionParameterValue"
        payload:
          type: object
        response:
          $ref: "#/components/schemas/ActionHttpResponse"
        async:
          $ref: "#/components/schemas/ActionHttpAsync"
      required:
        - url

    ActionEditableFields:
      description: Fields that are editable for an action
      allOf:
        - $ref: "#/components/schemas/NameAndDescription"
        - type: object
          properties:
            parameters:
              type: array
              items:
                $ref: "#/components/schemas/ActionParameterDefinition"
            command:
              discriminator:
                propertyName: type
              oneOf:
                - $ref: "#/components/schemas/HttpApiInvoke"
              example:
                type: http-api-invoke
                url: https://api.nexmo.com/v1/messages
                method: post
            timeout_seconds:
              type: number
              default: 5
              minimum: 0
              maximum: 60
      required:
        - command

    ActionDto:
      allOf:
        - $ref: "#/components/schemas/BulkBase"
        - $ref: "#/components/schemas/ActionEditableFields"

    ListRef:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ListId"
        type:
          type: string
          enum:
            - list
          example: list
      required:
        - id
        - type

    Recipients:
      type: object
      properties:
        include:
          minItems: 1
          maxItems: 10
          type: array
          items:
            $ref: "#/components/schemas/ListRef"
          example:
            - type: list
              id: 42a5313b-ea90-4166-a950-00eb6f95dfef
        exclude:
          minItems: 1
          maxItems: 10
          type: array
          items:
            $ref: "#/components/schemas/ListRef"
      required:
        - include

    Expression:
      type: object
      properties:
        expression:
          type: object
          maxLength: 256
          example: item.salary > 5000
      required:
        - expression

    ActionRef:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: c4fd1c9e-80e7-4db1-94cb-8ec0edc154a4
        type:
          type: string
          enum:
            - action
          example: action
      required:
        - id
        - type

    ActionCall:
      type: object
      properties:
        action_ref:
          $ref: "#/components/schemas/ActionRef"
        parameters:
          maxItems: 20
          type: array
          items:
            $ref: "#/components/schemas/ActionParameterValue"
      required:
        - action_ref

    MessageTemplate:
      type: object
      properties:
        type:
          type: string
          default: text
        message:
          type: object
          maxLength: 8112
          default: ""
          example: Hello {{ item.firstName }} {{ item.lastName }}
        encoding:
          type: string
          default: utf8
          enum:
            - utf8
      required:
        - message

    RecipientCorrelation:
      type: object
      properties:
        correlation_id:
          type: string
          example: "{{event.from}}"
      required:
        - correlation_id

    Rule:
      # todo: is rule the right name? maybe matcher as it's used in event_handler matcher field
      allOf:
        - $ref: "#/components/schemas/NameAndDescription"
        - type: object
          properties:
            condition:
              $ref: "#/components/schemas/Expression"
            action_call:
              $ref: "#/components/schemas/ActionCall"
            recipient:
              $ref: "#/components/schemas/RecipientCorrelation"
      required:
        - condition
        - action_call
        - recipient

    Segmentation:
      allOf:
        - $ref: "#/components/schemas/Rule"
        - type: object
          properties:
            # todo: suggest to rethink the use of template here. an alternative will be to set the message parameter with the template.message directly. going forward parameter value could have a type to render it differently
            template:
              $ref: "#/components/schemas/MessageTemplate"
      required:
        - template

    EventMatcher:
      allOf:
        - $ref: "#/components/schemas/Rule"

    EventsHandler:
      type: object
      properties:
        matching_strategy:
          type: string
          default: match-first
          enum:
            - match-first
            - match-all
          example: match-first
        matchers:
          type: array
          items:
            $ref: "#/components/schemas/EventMatcher"
          example:
          - name: opt-out
            description: unsubscribe
            condition:
              expression: event.text?.toLowerCase().includes('stop')
            action_call:
              action_ref:
                type: action
                id: bd795581-9a93-48b0-a4bc-3b7509bf6e4d
              parameters:
                - name: listId
                  value: fba7c209-ebb9-4b14-8acb-09a803d4f0a0
                - name: number
                  value: "{{event.from}}"
            recipient:
              correlation_id: "{{event.from}}"
      required:
        - matchers

    JobSegmentationDefinition:
      type: object
      properties:
        type:
          type: string
          default: segmentation-job
          enum:
            - segmentation-job
          example: segmentation-job
        recipients:
          $ref: "#/components/schemas/Recipients"
        segmentations:
          type: array
          items:
            $ref: "#/components/schemas/Segmentation"
        events_handler:
          $ref: "#/components/schemas/EventsHandler"
      required:
        - type
        - recipients
        - segmentations
      example:
        name: text vip customers
        description: text UK and USA vip customers
        recipient:
          correlation_id: "{{item.number}}"
        condition:
          expression: item.salary == 1000 || ['UK', 'USA'].includes(item.country)
        action_call:
          action_ref:
            id: "{{sendSmsActionId}}"
            type: action
          parameters:
            - name: fromNumber
              value: "{{my_campaign_number}}"
            - name: toNumber
              value: "{{ item.number }}"
            - name: message
              value: "{{ template.message }}"

    JobEditableFields:
      description: Fields that are editable for a job
      allOf:
        - $ref: "#/components/schemas/NameAndDescription"
        - type: object
          properties:
            tags:
              $ref: "#/components/schemas/Tags"
            definition:
              discriminator:
                propertyName: type
              oneOf:
                - $ref: "#/components/schemas/JobSegmentationDefinition"

    JobDto:
      allOf:
        - $ref: "#/components/schemas/BulkBase"
        - $ref: "#/components/schemas/JobEditableFields"

    RunEditableFields:
      description: Fields that are editable for a run
      allOf:
        - $ref: "#/components/schemas/NameAndDescription"
        - type: object
          properties:
            start_at:
              format: date-time
              type: string
              example: "2022-06-06T05:46:00.936Z"
            end_at:
              format: date-time
              type: string
              example: "2022-06-20T05:46:00.936Z"
            job_id:
              $ref: "#/components/schemas/JobId"
      required:
        - start_at
        - end_at
        - job_id

    RunStatus:
      type: object
      properties:
        value:
          type: string
          readOnly: true
          enum:
            - scheduled
            - running
            - paused
            - stopped
            - failed
            - completed
            - draft
          example: running
        details:
          type: string
          readOnly: true

    RunSystemFields:
      description: Fields that are added to a run by the system
      type: object
      properties:
        status:
          $ref: "#/components/schemas/RunStatus"

    RunDto:
      allOf:
        - $ref: "#/components/schemas/BulkBase"
        - $ref: "#/components/schemas/RunEditableFields"
        - $ref: "#/components/schemas/RunSystemFields"

    StatisticsEventType:
      type: string
      enum:
        - action-call-succeeded
        - action-call-failed
        - action-call-info
        - recipient-response
        - run-item-skipped
        - run-item-failed
      example: action-call-succeeded
      readOnly: true

    StatisticsEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 92cc64e5-f62b-464f-ab9c-4376bd05adfc
        event_type:
          $ref: "#/components/schemas/StatisticsEventType"
        src_ctx:
          type: string
          example: uk recipient
        occurred_at:
          format: date-time
          type: string
          example: "2022-06-19T20:41:59.085Z"
        event_data:
          type: object
          example:
            city: North Assunta
            country: Iceland
            state: PH
      required:
        - id
        - event_type
        - src_ctx
        - occurred_at
        - event_data

    EventError:
      # todo: maybe rename to RunErrorDetails?
      type: object
      properties:
        code:
          type: string
        details:
          type: string
          example: Not found
      required:
        - details

    ExecutionStatisticsEvent:
      allOf:
        - $ref: "#/components/schemas/StatisticsEvent"
        - type: object
          properties:
            job_id:
              $ref: "#/components/schemas/JobId"
            run_id:
              $ref: "#/components/schemas/RunId"
            recipient_id:
              $ref: "#/components/schemas/RecipientId"
      required:
        - job_id
        - run_id
        - recipient_id

    ActionStatisticsEvent:
      allOf:
        - $ref: "#/components/schemas/ExecutionStatisticsEvent"
        - type: object
          properties:
            action_id:
              $ref: "#/components/schemas/ActionId"
            invocation_id:
              $ref: "#/components/schemas/InvocationId"
      required:
        - action_id

    ActionCallFailedEvent:
      allOf:
        - $ref: "#/components/schemas/ActionStatisticsEvent"
        - type: object
          properties:
            event_type:
              type: string
              example: action-call-failed
            error:
              $ref: "#/components/schemas/EventError"

    ActionCallInfoEvent:
      allOf:
        - $ref: "#/components/schemas/ActionStatisticsEvent"
        - type: object
          properties:
            event_type:
              type: string
              example: action-call-info

    ActionCallSucceededEvent:
      allOf:
        - $ref: "#/components/schemas/ActionStatisticsEvent"

    RunItemSkippedEvent:
      allOf:
        - $ref: "#/components/schemas/ExecutionStatisticsEvent"
        - type: object
          properties:
            event_type:
              type: string
              example: run-item-skipped

    RunItemFailedEvent:
      allOf:
        - $ref: "#/components/schemas/ExecutionStatisticsEvent"
        - type: object
          properties:
            event_type:
              type: string
              example: run-item-failed
            error:
              $ref: "#/components/schemas/EventError"

    RecipientResponseEvent:
      allOf:
        - $ref: "#/components/schemas/ExecutionStatisticsEvent"
        - type: object
          properties:
            event_type:
              type: string
              example: recipient-response

    RunStatsMetric:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/StatisticsEventType"
        value:
          type: number
          readOnly: true
          example: 226
        statistics:
          type: string
          readOnly: true
          enum:
            - recipient-distinct-count
          example: recipient-distinct-count
        occurred_at_min:
          format: date-time
          type: string
          readOnly: true
        occurred_at_max:
          format: date-time
          type: string
          readOnly: true
      required:
        - name
        - value
        - statistics

    RunSummary:
      type: object
      properties:
        run_id:
          $ref: "#/components/schemas/RunId"
        summary:
          readOnly: true
          type: array
          items:
            $ref: "#/components/schemas/RunStatsMetric"
          example:
            - value: 3
              name: action-call-succeeded
              statistics: recipient-distinct-count
              occurred_at_min: "2022-06-20T05:52:49.063Z"
              occurred_at_max: "2022-06-20T05:52:49.099Z"
            - value: 0
              name: action-call-failed
              statistics: recipient-distinct-count
      required:
        - run_id
        - summary

  examples:
    ListManualExample:
      value:
        name: Recipients for demo
        description: List of recipients for demo
        tags:
          - vip
        labels:
          - name: firstName
          - name: lastName
            key: false
          - name: number
            alias: phoneNumber
            key: true

    ListManualResponseExample:
      value:
        name: Recipients for demo
        description: List of recipients for demo
        tags:
          - vip
        labels:
          - name: firstName
          - name: lastName
            key: false
          - name: number
            alias: phoneNumber
            key: true
        id: af8a84b6-c712-4252-ac8d-6e28ac9317ce
        type: manual
        items_count: 1000
        sync_status: configured
        created_at: "2022-06-23T13:13:16.491Z"
        updated_at: "2022-06-23T13:13:16.491Z"

    ListSalesforceExample:
      value:
        name: Salesforce contact
        description: Salesforce contacts for campaign
        tags:
          - salesforce
        labels:
          - key: false
            name: Id
          - key: false
            name: Phone
          - key: false
            name: Email
        datasource:
          type: salesforce
          integration_id: salesforce
          soql: SELECT Id, LastName, FirstName, Phone, Email, OtherCountry FROM Contact

    ListSalesforceResponseExample:
      value:
        name: Salesforce contact
        description: Salesforce contacts for campaign
        tags:
          - salesforce
        labels:
          - key: false
            name: Id
          - key: false
            name: Phone
          - key: false
            name: Email
        datasource:
          type: salesforce
          integration_id: salesforce
          soql: SELECT Id, LastName, FirstName, Phone, Email, OtherCountry FROM Contact
        id: 4cb98f71-a879-49f7-b5cf-2314353eb52c
        type: salesforce
        items_count: 25000
        sync_status: completed
        content_synced: true
        created_at: '2022-08-02T13:22:04.267Z'
        updated_at: '2022-08-02T13:22:04.267Z'

    ItemRequestExample:
      value:
        data:
          Id: '0038d00000B22zbAAB'
          Email: info@salesforce.com
          Phone: "(415) 555-1212"
          LastName: Minor
          FirstName: Geoff
          OtherCountry: Canada

    ItemsResponseExample:
      value:
        id: 6e26d247-e074-4f68-b72b-dd92aa02c7e0
        created_at: '2022-08-03T08:54:21.122Z'
        updated_at: '2022-08-03T08:54:21.122Z'
        list_id: 060b9c33-6c81-4fe4-9621-b10c0a4c06f3
        data:
          Id: '0038d00000B22zbAAB'
          Email: info@salesforce.com
          Phone: "(415) 555-1212"
          LastName: Minor
          FirstName: Geoff
          OtherCountry: Canada

    ItemsImportExample:
      value:
        inserted: 10000

    ActionSendSMSRequestExample:
      value:
        name: vg-send-sms
        description: Send text message using Vonage messaging APIs
        parameters:
          - type: string
            required: true
            name: fromNumber
          - type: string
            required: true
            name: toNumber
          - type: string
            required: true
            name: message
          - type: secret
            required: true
            name: vonage-jwt-token
            default: vng-prd-messaging-api
        command:
          type: http-api-invoke
          url: https://api.nexmo.com/v1/messages
          method: post
          headers:
            - name: Content-Type
              value: application/json
            - name: Authorization
              value: Bearer {{ parameters.vonage-jwt-token }}
          payload:
            to: "{{ parameters.toNumber }}"
            message_type: text
            from: "{{ parameters.fromNumber }}"
            channel: sms
            text: "{{ parameters.message }}"
          response:
            success:
              codes:
                - "202"
            invocation_id: "{{response.payload.message_uuid}}"
            error:
              code: "{{response.payload.statusCode}}"
              details: "{{response.payload.error.details}}"
          async:
            invocation_id: "{{ event.message_uuid }}"
            status:
              value: "{{event.status}}"
              success:
                values:
                  - delivered
              error:
                values:
                  - rejected
                  - undeliverable
                details: "{{event.error.details}}"
              info:
                values:
                  - submitted
        timeout_seconds: 5

    ActionSendSMSResponseExample:
      value:
        name: vg-send-sms
        description: Send text message using Vonage messaging APIs
        parameters:
          - type: string
            required: true
            name: fromNumber
          - type: string
            required: true
            name: toNumber
          - type: string
            required: true
            name: message
          - type: secret
            required: true
            name: vonage-jwt-token
            default: vng-prd-messaging-api
        command:
          type: http-api-invoke
          url: https://api.nexmo.com/v1/messages
          method: post
          headers:
            - name: Content-Type
              value: application/json
            - name: Authorization
              value: Bearer {{ parameters.vonage-jwt-token }}
          payload:
            to: "{{ parameters.toNumber }}"
            message_type: text
            from: "{{ parameters.fromNumber }}"
            channel: sms
            text: "{{ parameters.message }}"
          response:
            success:
              codes:
                - "202"
            invocation_id: "{{response.payload.message_uuid}}"
            error:
              code: "{{response.payload.statusCode}}"
              details: "{{response.payload.error.details}}"
          async:
            invocation_id: "{{ event.message_uuid }}"
            status:
              value: "{{event.status}}"
              success:
                values:
                  - delivered
              error:
                values:
                  - rejected
                  - undeliverable
                details: "{{event.error.details}}"
              info:
                values:
                  - submitted
        timeout_seconds: 5
        id: 99ea10e0-1f14-4f55-b976-3c88ea8ec4cd
        created_at: "2022-06-23T17:45:31.782Z"
        updated_at: "2022-06-23T17:45:31.782Z"

    JobSegmentationRequestExample:
      value:
        name: send sms with optional end-user response
        tags:
          - marketing
          - uk
        definition:
          type: segmentation-job
          recipients:
            include:
              - id: c6a4704e-2ddd-47b7-b79c-7df38feafb3f
                type: list
            exclude:
              - id: fba7c209-ebb9-4b14-8acb-09a803d4f0a0
                type: list
          segmentations:
            - condition:
                expression: item.salary == 1000 || ['UK', 'USA'].includes(item.country)
              action_call:
                action_ref:
                  id: 466ce4a4-9cec-40c0-83ab-c3fa64e48b6f
                  type: action
                parameters:
                  - name: fromNumber
                    value: "447418365541"
                  - name: toNumber
                    value: "{{ item.number }}"
                  - name: message
                    value: "{{ template.message }}"
              name: text vip customers
              description: text UK and USA vip customers
              template:
                type: text
                message:
                  Dear {{ item.firstName }}, {{ item.lastName }} :)\n This's our 1st
                  SMS communication from Vonage campaign.\nReply back with STOP if you want
                  to stop receiving our messages
                encoding: utf8
              recipient:
                correlation_id: "{{item.number}}"
          events_handler:
            matching_strategy: match-first
            matchers:
              - condition:
                  expression: event.text?.toLowerCase().includes('stop')
                action_call:
                  action_ref:
                    type: action
                    id: bd795581-9a93-48b0-a4bc-3b7509bf6e4d
                  parameters:
                    - name: listId
                      value: fba7c209-ebb9-4b14-8acb-09a803d4f0a0
                    - name: number
                      value: "{{event.from}}"
                name: opt-out
                description: unsubscribe
                recipient:
                  correlation_id: "{{event.from}}"

    JobResponseExample:
      value:
        name: send sms with optional end-user response
        tags:
          - marketing
          - uk
        definition:
          type: segmentation-job
          recipients:
            include:
              - id: c6a4704e-2ddd-47b7-b79c-7df38feafb3f
                type: list
            exclude:
              - id: fba7c209-ebb9-4b14-8acb-09a803d4f0a0
                type: list
          segmentations:
            - condition:
                expression: item.salary == 1000 || ['UK', 'USA'].includes(item.country)
              action_call:
                action_ref:
                  id: 466ce4a4-9cec-40c0-83ab-c3fa64e48b6f
                  type: action
                parameters:
                  - name: fromNumber
                    value: "447418365541"
                  - name: toNumber
                    value: "{{ item.number }}"
                  - name: message
                    value: "{{ template.message }}"
              name: text vip customers
              description: text UK and USA vip customers
              template:
                type: text
                message:
                  Dear {{ item.firstName }}, {{ item.lastName }} :)\n This's our 1st
                  SMS communication from Vonage campaign.\nReply back with STOP if you want
                  to stop receiving our messages
                encoding: utf8
              recipient:
                correlation_id: "{{item.number}}"
          events_handler:
            matching_strategy: match-first
            matchers:
              - condition:
                  expression: event.text?.toLowerCase().includes('stop')
                action_call:
                  action_ref:
                    type: action
                    id: bd795581-9a93-48b0-a4bc-3b7509bf6e4d
                  parameters:
                    - name: listId
                      value: fba7c209-ebb9-4b14-8acb-09a803d4f0a0
                    - name: number
                      value: "{{event.from}}"
                name: opt-out
                description: unsubscribe
                recipient:
                  correlation_id: "{{event.from}}"
        id: e721113d-0948-4edb-b4af-e3f0578d708c
        created_at: "2022-06-24T07:49:33.748Z"
        updated_at: "2022-06-24T07:49:33.748Z"

    RunRequestExample:
      value:
        name: E2E Demo run
        job_id: e721113d-0948-4edb-b4af-e3f0578d708c
        status: scheduled
        # todo: should we group the schedule part into a dedicated object?
        start_at: "2022-06-24T04:06:36.000Z"
        end_at: "2022-06-24T08:57:55.917Z"

    RunResponseExample:
      value:
        name: E2E Demo run
        job_id: e721113d-0948-4edb-b4af-e3f0578d708c
        status: scheduled
        # todo: should we group the schedule part into a dedicated object?
        start_at: "2022-06-24T04:06:36.000Z"
        end_at: "2022-06-24T08:57:55.917Z"
        id: 51aca838-2cf6-4100-b0d2-e74ac0e95c88
        created_at: "2022-06-24T07:57:56.301Z"
        updated_at: "2022-06-24T07:57:56.301Z"

    # todo: complete events example
    ActionCallEventMessagingExample:
      value:
        id: 9a8afd25-b6cc-4067-982f-5ff87b01973f
        recipient_id: 12025550135
        invocation_id: "{{ event.message_uuid }}"
